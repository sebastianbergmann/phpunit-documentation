<?xml version="1.0" encoding="utf-8" ?>

<chapter id="logging">
  <title>Logging</title>

  <caution>
    <para>
      You are looking at the documentation for a version of PHPUnit that is no
      longer supported.
    </para>

    <para>
      The documentation for the current version of PHPUnit can be found
      <ulink url="../../current/en/index.html">here</ulink>.
    </para>
  </caution>

  <para>
    <indexterm><primary>Logging</primary></indexterm>

    PHPUnit can produce several types of logfiles.
  </para>

  <section id="logging.xml">
    <title>Test Results (XML)</title>

    <para>
      The XML logfile for test results produced by PHPUnit is based upon the one
      used by the <ulink url="http://ant.apache.org/manual/Tasks/junit.html">JUnit
      task for Apache Ant</ulink>. The following example shows the XML
      logfile generated for the tests in <literal>ArrayTest</literal>:
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ArrayTest"
             file="/home/sb/ArrayTest.php"
             tests="2"
             assertions="2"
             failures="0"
             errors="0"
             time="0.016030">
    <testcase name="testNewArrayIsEmpty"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="6"
              assertions="1"
              time="0.008044"/>
    <testcase name="testArrayContainsAnElement"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="15"
              assertions="1"
              time="0.007986"/>
  </testsuite>
</testsuites>]]></screen>

    <para>
      The following XML logfile was generated for two tests,
      <literal>testFailure</literal> and <literal>testError</literal>,
      of a test case class named <literal>FailureErrorTest</literal> and
      shows how failures and errors are denoted.
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="FailureErrorTest"
             file="/home/sb/FailureErrorTest.php"
             tests="2"
             assertions="1"
             failures="1"
             errors="1"
             time="0.019744">
    <testcase name="testFailure"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="6"
              assertions="1"
              time="0.011456">
      <failure type="PHPUnit_Framework_ExpectationFailedException">
testFailure(FailureErrorTest)
Failed asserting that &lt;integer:2&gt; matches expected value &lt;integer:1&gt;.

/home/sb/FailureErrorTest.php:8
</failure>
    </testcase>
    <testcase name="testError"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="11"
              assertions="0"
              time="0.008288">
      <error type="Exception">testError(FailureErrorTest)
Exception:

/home/sb/FailureErrorTest.php:13
</error>
    </testcase>
  </testsuite>
</testsuites>]]></screen>
  </section>

  <section id="logging.tap">
    <title>Test Results (TAP)</title>

    <para>
      The <ulink url="http://testanything.org/">Test Anything Protocol (TAP)</ulink>
      is Perl's simple text-based interface between testing modules. The
      following example shows the TAP logfile generated for the tests in
      <literal>ArrayTest</literal>:
    </para>

    <screen>TAP version 13
ok 1 - testNewArrayIsEmpty(ArrayTest)
ok 2 - testArrayContainsAnElement(ArrayTest)
1..2</screen>

    <para>
      The following TAP logfile was generated for two tests,
      <literal>testFailure</literal> and <literal>testError</literal>,
      of a test case class named <literal>FailureErrorTest</literal> and
      shows how failures and errors are denoted.
    </para>

    <screen><![CDATA[TAP version 13
not ok 1 - Failure: testFailure(FailureErrorTest)
not ok 2 - Error: testError(FailureErrorTest)
1..2]]></screen>
  </section>

  <section id="logging.json">
    <title>Test Results (JSON)</title>

    <para>
      The <ulink url="http://www.json.org/">JavaScript Object Notation (JSON)</ulink>
      is a lightweight data-interchange format. The following example shows
      the JSON messages generated for the tests in <literal>ArrayTest</literal>:
    </para>

    <screen>{"event":"suiteStart","suite":"ArrayTest","tests":2}
{"event":"test","suite":"ArrayTest",
 "test":"testNewArrayIsEmpty(ArrayTest)","status":"pass",
 "time":0.000460147858,"trace":[],"message":""}
{"event":"test","suite":"ArrayTest",
 "test":"testArrayContainsAnElement(ArrayTest)","status":"pass",
 "time":0.000422954559,"trace":[],"message":""}</screen>

    <para>
      The following JSON messages were generated for two tests,
      <literal>testFailure</literal> and <literal>testError</literal>,
      of a test case class named <literal>FailureErrorTest</literal> and
      show how failures and errors are denoted.
    </para>

    <screen><![CDATA[{"event":"suiteStart","suite":"FailureErrorTest","tests":2}
{"event":"test","suite":"FailureErrorTest",
 "test":"testFailure(FailureErrorTest)","status":"fail",
 "time":0.0082459449768066,"trace":[],
 "message":"Failed asserting that <integer:2> is equal to <integer:1>."}
{"event":"test","suite":"FailureErrorTest",
 "test":"testError(FailureErrorTest)","status":"error",
 "time":0.0083680152893066,"trace":[],"message":""}]]></screen>
  </section>

  <section id="logging.codecoverage">
    <title>Code Coverage (XML)</title>

    <para>
      The XML format for code coverage information logging produced by PHPUnit
      is loosely based upon the one used by <ulink url="http://www.atlassian.com/software/clover/">
      Clover</ulink>. The following example shows the XML
      logfile generated for the tests in <literal>BankAccountTest</literal>:
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1184835473" phpunit="3.3.0">
  <project name="BankAccountTest" timestamp="1184835473">
    <file name="/home/sb/BankAccount.php">
      <class name="BankAccountException">
        <metrics methods="0" coveredmethods="0" statements="0"
                 coveredstatements="0" elements="0" coveredelements="0"/>
      </class>
      <class name="BankAccount">
        <metrics methods="4" coveredmethods="4" statements="13"
                 coveredstatements="5" elements="17" coveredelements="9"/>
      </class>
      <line num="77" type="method" count="3"/>
      <line num="79" type="stmt" count="3"/>
      <line num="89" type="method" count="2"/>
      <line num="91" type="stmt" count="2"/>
      <line num="92" type="stmt" count="0"/>
      <line num="93" type="stmt" count="0"/>
      <line num="94" type="stmt" count="2"/>
      <line num="96" type="stmt" count="0"/>
      <line num="105" type="method" count="1"/>
      <line num="107" type="stmt" count="1"/>
      <line num="109" type="stmt" count="0"/>
      <line num="119" type="method" count="1"/>
      <line num="121" type="stmt" count="1"/>
      <line num="123" type="stmt" count="0"/>
      <metrics loc="126" ncloc="37" classes="2" methods="4" coveredmethods="4"
               statements="13" coveredstatements="5" elements="17"
               coveredelements="9"/>
    </file>
    <metrics files="1" loc="126" ncloc="37" classes="2" methods="4"
             coveredmethods="4" statements="13" coveredstatements="5"
             elements="17" coveredelements="9"/>
  </project>
</coverage>]]></screen>
  </section>

  <section id="logging.database">
    <title>Test Database</title>
    <indexterm><primary>Test Database</primary></indexterm>

    <para>
      PHPUnit can write test result and code coverage data to a
      <ulink url="http://www.phpunit.de/wiki/TestDatabase">test database</ulink>.
      Several <ulink url="http://www.phpunit.de/wiki/Ideas">ideas for future features</ulink>
      depend on this data.
    </para>

    <orderedlist>
      <listitem>
        <para>For each <emphasis>run</emphasis> of the test suite there is a row in the <filename>run</filename> table.</para>
      </listitem>
      <listitem>
        <para>For each <emphasis>test</emphasis> that is executed as part of a test run there is a row in the <filename>test</filename> table.</para>
      </listitem>
      <listitem>
        <para>For each <emphasis>file</emphasis> that is part of a revision there is a row in the <filename>code_file</filename> table.</para>
      </listitem>
      <listitem>
        <para>For each <emphasis>class</emphasis> that is declared in a file that is part of a revision there is a row in the <filename>code_class</filename> table.</para>
      </listitem>
      <listitem>
        <para>For each <emphasis>method</emphasis> that is declared in a file that is part of a revision there is a row in the <filename>code_method</filename> table.</para>
      </listitem>
      <listitem>
        <para>For each <emphasis>line of code</emphasis> that belongs to a file that is part of a revision there is a row in the <filename>code_line</filename> table.</para>
      </listitem>
      <listitem>
        <para>The <filename>code_coverage</filename> table connects each test to the lines of code it covers.</para>
      </listitem>
    </orderedlist>

    <para>
      Before we can write test result and code coverage data to a database, we
      need to create a database using one of the supplied schema definitions:
    </para>

    <screen><userinput>sqlite3 BankAccount.db &lt; PHPUnit/Util/Log/Database/SQLite3.sql</userinput></screen>

    <para>
      Now we can execute a test suite and write the test result and code
      coverage data to a database:
    </para>

    <screen><userinput>phpunit --test-db-dsn sqlite:///home/sb/BankAccount.db --test-db-log-rev 1 BankAccountTest</userinput>
PHPUnit 3.3.0 by Sebastian Bergmann.

...

Time: 0 seconds

OK (3 tests)

Storing code coverage data in database, this may take a moment.</screen>

    <para>
      <xref linkend="logging.database.tables.textui-arguments" /> shows the
      arguments understood by the TextUI test runner (see
      <xref linkend="textui" />) for the test database.
    </para>

    <table id="logging.database.tables.textui-arguments">
      <title>TextUI Arguments for the Test Database</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>Argument</entry>
            <entry>Meaning</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>--test-db-dsn &lt;dsn&gt;</literal></entry>
            <entry>The PDO data source name (DSN) for the database connection. In general, a DSN consists of the PDO driver name, followed by a colon, followed by the PDO driver-specific connection syntax.</entry>
          </row>
          <row>
            <entry><literal>--test-db-log-rev &lt;r&gt;</literal></entry>
            <entry>A number, for instance a <ulink url="http://svnbook.red-bean.com/nightly/en/svn.basic.in-action.html#svn.basic.in-action.revs">Subversion Global Revision Number</ulink>, that uniquely identifies the current revision of the codebase.</entry>
          </row>
          <row>
            <entry><literal>--test-db-log-info ...</literal></entry>
            <entry>Additional information on the test environment, for instance.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</chapter>
