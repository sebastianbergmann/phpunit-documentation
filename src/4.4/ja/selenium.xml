<?xml version="1.0" encoding="utf-8" ?>

<chapter id="selenium">
  <title>PHPUnit と Selenium</title>

  <section id="selenium.selenium-rc">
    <title>Selenium Server</title>

    <para>
      <indexterm><primary>Selenium Server</primary></indexterm>

      <ulink url="http://seleniumhq.org/">Selenium Server</ulink>
      はテストツールのひとつです。これは、OS を通してブラウザのプロセスを動かし、
      ブラウザのタスクを自動実行します。
      あらゆるプログラミング言語で稼動しているウェブサイトに対応しており、
      現在主流のあらゆるブラウザで使用することができます。Selenium RC は
      <ulink url="http://seleniumhq.org/">Selenium Core</ulink>
      を使用しています。これは、ブラウザ上でのタスクを自動的に実行する
      JavaScript のライブラリです。Selenium でのテストは、
      一般のユーザが使用するのと同じようにブラウザ上で直接実行されます。
      主な使用例としては、<emphasis>受け入れテスト</emphasis>
      (各システム単体のテストではなく、結合されたシステム全体に対するテスト)
      や <emphasis>ブラウザの互換性のテスト</emphasis>
      (ウェブアプリケーションを、さまざまなオペレーティングシステムやブラウザでテストする)
      などがあります。
    </para>
    
    <para>
      PHPUnit_Selenium がサポートしている唯一のシナリオは、
      Selenium 2.x サーバを使うものです。
      Selenium 2.x サーバにアクセスするには、1.0 から存在する古い形式の Selenium RC API を使うか、
      あるいは PHPUnit_Selenium 1.2 で一部実装済みの WebDriver API を使います。
    </para>
    <para>
      なぜそうしたかというと、Selenium 2 には後方互換性があり、
      Selenium RC がもうメンテナンスされていないからです。
    </para>

  </section>
  
  <section id="selenium.installation">
    <title>インストール</title>

    <para>
      まず、Selenium Server をインストールします。
    </para>

    <orderedlist>
      <listitem><ulink url="http://seleniumhq.org/download/">Selenium Server</ulink> の配布アーカイブをダウンロードする。</listitem>
      <listitem>アーカイブを展開し、<filename>selenium-server-standalone-2.9.0.jar</filename> (バージョンをチェックすること) を <filename>/usr/local/bin</filename> などにコピーする。</listitem>
      <listitem><userinput>java -jar /usr/local/bin/selenium-server-standalone-2.9.0.jar</userinput> などのようにして Selenium RC サーバを起動する。</listitem>
    </orderedlist>

    <para>
      PHPUnit_Selenium パッケージは、PHPUnit の PHAR 版の中に含まれています。
      Composer でインストールするには、
      <literal>"require-dev"</literal>
      に次の行を追加します。
    </para>

    <screen><userinput>"phpunit/phpunit-selenium": ">=1.2"</userinput></screen>

    <para>
      これで、クライアント/サーバ プロトコルを用いて
      Selenium Server にコマンドを送信できるようになりました。
    </para>
  </section>

  <section id="selenium.selenium2testcase">
    <title>PHPUnit_Extensions_Selenium2TestCase</title>

    <para>
      <indexterm><primary><literal>PHPUnit_Extensions_Selenium2TestCase</literal></primary></indexterm>

      <literal>PHPUnit_Extensions_Selenium2TestCase</literal> テストケースは、
      WebDriver API を利用します (実装しているのはその一部だけです)。
    </para>

    <para>
      <xref linkend="selenium.selenium2testcase.examples.WebTest.php" /> は、
      ウェブサイト <systemitem role="URL">http://www.example.com/</systemitem>
      の <literal><![CDATA[<title>]]></literal> 要素の内容をテストする方法を示したものです。
    </para>
    <example id="selenium.selenium2testcase.examples.WebTest.php">
      <title>PHPUnit_Extensions_Selenium2TestCase の使用例</title>
      <programlisting><![CDATA[<?php
class WebTest extends PHPUnit_Extensions_Selenium2TestCase
{
    protected function setUp()
    {
        $this->setBrowser('firefox');
        $this->setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this->url('http://www.example.com/');
        $this->assertEquals('Example WWW Page', $this->title());
    }

}
?>]]></programlisting>
      <screen><userinput>phpunit WebTest</userinput><![CDATA[
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 28 seconds, Memory: 3.00Mb

There was 1 failure:

1) WebTest::testTitle
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'Example WWW Page'
+'IANA — Example domains'

/home/giorgio/WebTest.php:13

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen></example>

  <para>    
    Selenium2TestCase のコマンドは __call() を使って実装しています。
    サポートする機能の一覧は
    <ulink url="https://github.com/sebastianbergmann/phpunit-selenium/blob/master/Tests/Selenium2TestCaseTest.php">PHPUnit_Extensions_Selenium2TestCase のエンドツーエンドテスト</ulink>
    を参照ください。
  </para>
  </section>

  <section id="selenium.seleniumtestcase">
    <title>PHPUnit_Extensions_SeleniumTestCase</title>

    <para>
      <indexterm><primary><literal>PHPUnit_Extensions_SeleniumTestCase</literal></primary></indexterm>

      <literal>PHPUnit_Extensions_SeleniumTestCase</literal>
      は、Selenium Server と通信するための クライアント/サーバ プロトコルを実装したものです。
      また、ウェブのテスト用に特化したアサーションメソッドも提供します。
    </para>

    <para>
      <xref linkend="selenium.seleniumtestcase.examples.WebTest.php" /> は、
      ウェブサイト <systemitem role="URL">http://www.example.com/</systemitem>
      の <literal><![CDATA[<title>]]></literal> 要素の内容をテストする方法を示したものです。
    </para>

    <example id="selenium.seleniumtestcase.examples.WebTest.php">
      <title>PHPUnit_Extensions_SeleniumTestCase の使用例</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    protected function setUp()
    {
        $this->setBrowser('*firefox');
        $this->setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this->open('http://www.example.com/');
        $this->assertTitle('Example WWW Page');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit WebTest</userinput><![CDATA[
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 9 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>

    <para>
      <literal>PHPUnit_Framework_TestCase</literal> クラスとは異なり、
      <literal>PHPUnit_Extensions_SeleniumTestCase</literal> を継承したテストケースクラスは
      <literal>setUp()</literal> メソッドが必須となります。
      このメソッド内で、Selenium Server セッションの設定を行います。
      ここで使用できるメソッドの一覧は
      <xref linkend="selenium.seleniumtestcase.tables.seleniumrc-api.setup" />
      を参照ください。
    </para>

    <table id="selenium.seleniumtestcase.tables.seleniumrc-api.setup">
      <title>Selenium Server API: セットアップ</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>メソッド</entry>
            <entry>意味</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void setBrowser(string $browser)</literal></entry>
            <entry>Selenium Server が使用するブラウザを設定します。</entry>
          </row>
          <row>
            <entry><literal>void setBrowserUrl(string $browserUrl)</literal></entry>
            <entry>テストするベース URL を設定します。</entry>
          </row>
          <row>
            <entry><literal>void setHost(string $host)</literal></entry>
            <entry>Selenium Server に接続する際のホスト名を設定します。</entry>
          </row>
          <row>
            <entry><literal>void setPort(int $port)</literal></entry>
            <entry>Selenium Server に接続する際のポートを設定します。</entry>
          </row>
          <row>
            <entry><literal>void setTimeout(int $timeout)</literal></entry>
            <entry>Selenium Server に接続する際のタイムアウト値を設定します。</entry>
          </row>
          <row>
            <entry><literal>void setSleep(int $seconds)</literal></entry>
            <entry>Selenium Server クライアントが、Selenium Server のサーバにアクションコマンドを送信してから待機する秒数を設定します。</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>
      PHPUnit では、Selenium のテストが失敗したときのスクリーンショットを撮ることができます。
      この機能を使うには、<literal>$captureScreenshotOnFailure</literal>、
      <literal>$screenshotPath</literal> および <literal>$screenshotUrl</literal>
      をテストケースクラス内で
      <xref linkend="selenium.seleniumtestcase.examples.WebTest2.php" />
      のように指定します。
    </para>

    <example id="selenium.seleniumtestcase.examples.WebTest2.php">
      <title>テストに失敗したときのスクリーンショットの取得</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    protected $captureScreenshotOnFailure = TRUE;
    protected $screenshotPath = '/var/www/localhost/htdocs/screenshots';
    protected $screenshotUrl = 'http://localhost/screenshots';

    protected function setUp()
    {
        $this->setBrowser('*firefox');
        $this->setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this->open('http://www.example.com/');
        $this->assertTitle('Example WWW Page');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit WebTest</userinput><![CDATA[
PHPUnit 4.4.0 by Sebastian Bergmann.

F

Time: 7 seconds, Memory: 6.00Mb

There was 1 failure:

1) WebTest::testTitle
Current URL: http://www.iana.org/domains/example/
Screenshot: http://localhost/screenshots/334b080f2364b5f11568ee1c7f6742c9.png

Failed asserting that 'IANA — Example domains' matches PCRE pattern "/Example WWW Page/".

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>

    <para>
      複数のブラウザを使用してテストを行なうこともできます。この場合は、
      <literal>setBrowser()</literal> でブラウザの設定を行うかわりに、
      テストケースクラスの中で <literal>$browsers</literal> という名前の
      <literal>public static</literal> な配列を作成します。
      この配列の各項目が個々のブラウザの設定を表します。
      これらのブラウザは、それぞれ別の Selenium Server のサーバで管理することができます。
      <xref linkend="selenium.seleniumtestcase.examples.WebTest3.php" />
      に例を示します。
    </para>

    <example id="selenium.seleniumtestcase.examples.WebTest3.php">
      <title>複数のブラウザの設定管理</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class WebTest extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $browsers = array(
      array(
        'name'    => 'Firefox on Linux',
        'browser' => '*firefox',
        'host'    => 'my.linux.box',
        'port'    => 4444,
        'timeout' => 30000,
      ),
      array(
        'name'    => 'Safari on MacOS X',
        'browser' => '*safari',
        'host'    => 'my.macosx.box',
        'port'    => 4444,
        'timeout' => 30000,
      ),
      array(
        'name'    => 'Safari on Windows XP',
        'browser' => '*custom C:\Program Files\Safari\Safari.exe -url',
        'host'    => 'my.windowsxp.box',
        'port'    => 4444,
        'timeout' => 30000,
      ),
      array(
        'name'    => 'Internet Explorer on Windows XP',
        'browser' => '*iexplore',
        'host'    => 'my.windowsxp.box',
        'port'    => 4444,
        'timeout' => 30000,
      )
    );

    protected function setUp()
    {
        $this->setBrowserUrl('http://www.example.com/');
    }

    public function testTitle()
    {
        $this->open('http://www.example.com/');
        $this->assertTitle('Example Web Page');
    }
}
?>]]></programlisting>
    </example>

    <para>
      <literal>PHPUnit_Extensions_SeleniumTestCase</literal> を使用すると、
      Selenium で実行したテストのカバレッジ情報を収集することができます。
    </para>

    <orderedlist>
      <listitem><filename>PHPUnit/Extensions/SeleniumCommon/phpunit_coverage.php</filename> をウェブサーバのドキュメントルートディレクトリにコピーします。</listitem>
      <listitem>ウェブサーバ上の <filename>php.ini</filename> ファイルで、<filename>PHPUnit/Extensions/SeleniumCommon/prepend.php</filename> と <filename>PHPUnit/Extensions/SeleniumCommon/append.php</filename> をそれぞれ <literal>auto_prepend_file</literal> および <literal>auto_append_file</literal> に設定します。</listitem>
      <listitem><literal>PHPUnit_Extensions_SeleniumTestCase</literal> を継承したテストケースクラスで、<programlisting>protected $coverageScriptUrl = 'http://host/phpunit_coverage.php';</programlisting> のようにして <filename>phpunit_coverage.php</filename> スクリプトの URL を指定します。</listitem>
    </orderedlist>

    <para>
      <xref linkend="selenium.seleniumtestcase.tables.assertions" />
      は、<literal>PHPUnit_Extensions_SeleniumTestCase</literal>
      が提供するさまざまなアサーションメソッドの一覧です。
    </para>

    <table id="selenium.seleniumtestcase.tables.assertions">
      <title>アサーション</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>アサーション</entry>
            <entry>意味</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void assertElementValueEquals(string $locator, string $text)</literal></entry>
            <entry><literal>$locator</literal> で表される要素の値が <literal>$text</literal> と異なる場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertElementValueNotEquals(string $locator, string $text)</literal></entry>
            <entry><literal>$locator</literal> で表される要素の値が <literal>$text</literal> と等しい場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertElementValueContains(string $locator, string $text)</literal></entry>
            <entry><literal>$locator</literal> で表される要素の値が <literal>$text</literal> を含まない場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertElementValueNotContains(string $locator, string $text)</literal></entry>
            <entry><literal>$locator</literal> で表される要素の値が <literal>$text</literal> を含む場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertElementContainsText(string $locator, string $text)</literal></entry>
            <entry><literal>$locator</literal> で表される要素が <literal>$text</literal> を含まない場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertElementNotContainsText(string $locator, string $text)</literal></entry>
            <entry><literal>$locator</literal> で表される要素が <literal>$text</literal> を含む場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertSelectHasOption(string $selectLocator, string $option)</literal></entry>
            <entry>指定したオプションが使用できない場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertSelectNotHasOption(string $selectLocator, string $option)</literal></entry>
            <entry>指定したオプションが使用できる場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertSelected($selectLocator, $option)</literal></entry>
            <entry>指定したラベルが選択されていない場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertNotSelected($selectLocator, $option)</literal></entry>
            <entry>指定したラベルが選択されている場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertIsSelected(string $selectLocator, string $value)</literal></entry>
            <entry>指定した値が選択されていない場合にエラーを報告します。</entry>
          </row>
          <row>
            <entry><literal>void assertIsNotSelected(string $selectLocator, string $value)</literal></entry>
            <entry>指定した値が選択されている場合にエラーを報告します。</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>
      <xref linkend="selenium.seleniumtestcase.tables.template-methods" /> は、
      <literal>PHPUnit_Extensions_SeleniumTestCase</literal>
      のテンプレートメソッドをまとめたものです。
    </para>

    <table id="selenium.seleniumtestcase.tables.template-methods">
      <title>テンプレートメソッド</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>メソッド</entry>
            <entry>意味</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void defaultAssertions()</literal></entry>
            <entry>
             テストケース内のすべてのテストで共有するアサーションを上書きします。
             このメソッドは、Selenium Server のサーバにコマンドが送信されるたびに (送信された後に) コールされます。
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>
      使用できるコマンドのリファレンスや実際の使用法については
      <ulink url="http://release.seleniumhq.org/selenium-core/1.0.1/reference.html">Selenium のドキュメント</ulink>
      を参照ください。
    </para>
    <para>
     Selenium 1 のコマンドは、__call で動的に実装されています。
     <ulink url="https://github.com/sebastianbergmann/phpunit-selenium/blob/master/PHPUnit/Extensions/SeleniumTestCase/Driver.php#L410">
     PHPUnit_Extensions_SeleniumTestCase_Driver::__call() の API ドキュメント</ulink> に、PHP 側で対応しているすべてのメソッドの一覧があります。
     また、引数や返り値の型も確認できます。
    </para>

    <para>
      <literal>runSelenese($filename)</literal> メソッドを使用すると、
      Selenese/HTML の設定から Selenium のテストを実行することができます。
      さらに、静的属性 <literal>$seleneseDirectory</literal> を使用すると、
      Selenese/HTML ファイルを含むディレクトリから自動的にテストオブジェクトを作成することができます。
      指定したディレクトリ配下を再帰的に走査し、
      <literal>.htm</literal> ファイルを探します。このファイルには
      Selenese/HTML が含まれているものとします。例として
      <xref linkend="selenium.seleniumtestcase.examples.WebTest4.php" />
      を参照ください。
    </para>

    <example id="selenium.seleniumtestcase.examples.WebTest4.php">
      <title>Selenese/HTML ファイルのディレクトリをテストとして使用する</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/SeleniumTestCase.php';

class SeleneseTests extends PHPUnit_Extensions_SeleniumTestCase
{
    public static $seleneseDirectory = '/path/to/files';
}
?>]]></programlisting>
    </example>

    <para>
    Selenium 1.1.1 から取り込まれた実験的な機能として、ユーザーが複数のテストでセッションを共有できるようになりました。
    現在サポートしているのは、ひとつのブラウザを使うときに全テストでセッションを共有するという場合だけです。
    セッションの共有機能を使うには、ブートストラップファイルで
    <literal>PHPUnit_Extensions_SeleniumTestCase::shareSession(true)</literal> をコールします。
    テストが成功しなかった (失敗、あるいは不完全) 場合は、共有セッションがリセットされます。
    クッキーをリセットしたり、(tearDown() メソッドで) テスト対象のアプリケーションからログアウトしたりして
    テストがお互い干渉しあわないようにするのは、ユーザ側の責任となります。
    </para>
  </section>
</chapter>
