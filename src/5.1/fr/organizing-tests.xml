<?xml version="1.0" encoding="utf-8" ?>

<chapter id="organizing-tests">
  <title>Organiser les tests</title>

  <para>
    <indexterm><primary>Suite de tests</primary></indexterm>

    L'un des objectifs de PHPUnit est que les tests
    soient combinables: nous voulons pouvoir exécuter n'importe quel nombre ou combinaison
    de tests ensembles, par exemple tous les tests pour le projet entier, ou
    les tests pour toutes les classes d'un composant qui constitue une partie du projet ou
    simplement les tests d'une seule classe particulière.
  </para>

  <para>
    PHPUnit gère différente façon d'organiser les tests et de les combiner en une
    suite de tests. Ce chapitre montre les approches les plus communément utilisées.
  </para>

  <section id="organizing-tests.filesystem">
    <title>Composer une suite de tests en utilisant le système de fichiers</title>

    <para>
      La façon probablement la plus simple de composer une suite de tests est de conserver
      tous les fichiers sources des cas de test dans un répertoire test. PHPUnit peut
      automatiquement trouver et exécuter les tests en parcourant récursivement le répertoire test.
    </para>

    <para>
      Jetons un oeil à la suite de tests de la bibliothèque <ulink url="http://github.com/sebastianbergmann/php-object-freezer/">Object_Freezer</ulink>. En regardant la structure des répertoires du projet, nous voyons que
      les classes de cas de test dans le répertoire <filename>Tests</filename> reflètent la structure des
      paquetages et des classes du système en cours de test (SCT, System Under Test ou SUT) dans le répertoire
      <filename>Object</filename>:
    </para>

    <screen>Object                              Tests
|-- Freezer                         |-- Freezer
|   |-- HashGenerator               |   |-- HashGenerator
|   |   `-- NonRecursiveSHA1.php    |   |   `-- NonRecursiveSHA1Test.php
|   |-- HashGenerator.php           |   |
|   |-- IdGenerator                 |   |-- IdGenerator
|   |   `-- UUID.php                |   |   `-- UUIDTest.php
|   |-- IdGenerator.php             |   |
|   |-- LazyProxy.php               |   |
|   |-- Storage                     |   |-- Storage
|   |   `-- CouchDB.php             |   |   `-- CouchDB
|   |                               |   |       |-- WithLazyLoadTest.php
|   |                               |   |       `-- WithoutLazyLoadTest.php
|   |-- Storage.php                 |   |-- StorageTest.php
|   `-- Util.php                    |   `-- UtilTest.php
`-- Freezer.php                     `-- FreezerTest.php</screen>

    <para>
      Pour exécuter tous les tests de la bibliothèque, nous n'avons qu'à faire
      pointer le lanceur de tests en ligne de commandes de PHPUnit sur ce
      répertoire test :
    </para>

    <screen><userinput>phpunit Tests</userinput>
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

............................................................ 60 / 75
...............

Time: 0 seconds

OK (75 tests, 164 assertions)</screen>

    <note>
      <para>
        Si vous pointez le lanceur de tests en ligne de commandes de PHPUnit sur
        un répertoire, il va chercher les fichiers
        <filename>*Test.php</filename>.
      </para>
    </note>

    <para>
      Pour n'exécuter que les tests déclarés dans la classe de cas de test
      <literal>Object_FreezerTest</literal> dans <filename>Tests/FreezerTest.php</filename>,
      nous pouvons utiliser la commande suivante :
    </para>

    <screen><userinput>phpunit Tests/FreezerTest</userinput>
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

............................

Time: 0 seconds

OK (28 tests, 60 assertions)</screen>

    <para>
      Pour un contrôle plus fin sur les tests à exécuter, nous pouvons utiliser
      l'option <literal>--filter</literal>:
    </para>

    <screen><userinput>phpunit --filter testFreezingAnObjectWorks Tests</userinput>
PHPUnit 5.1.0 by Sebastian Bergmann and contributors.

.

Time: 0 seconds

OK (1 test, 2 assertions)</screen>

    <note>
      <para>
        Un inconvénient de cette approche est que nous n'avons pas de contrôle sur
        l'ordre dans lequel les tests sont exécutés. Ceci peut conduire à des problèmes
        concernant les dépendances des tests, voir
        <xref linkend="writing-tests-for-phpunit.test-dependencies"/>.
        Dans la prochaine section, nous verrons comment nous pouvons rendre
        l'ordre d'exécution des tests explicité en utilisant le fichier de
        configuration XML.
      </para>
    </note>
  </section>

  <section id="organizing-tests.xml-configuration">
    <title>Composer une suite de tests en utilisant la configuration XML</title>
    <indexterm><primary>XML Configuration</primary></indexterm>

    <para>
      Le fichier de configuration XML de PHPUnit (<xref linkend="appendixes.configuration"/>)
      peut aussi être utilisé pour composer une suite de tests.
      <xref linkend="organizing-tests.xml-configuration.examples.phpunit.xml"/>
      montre un exemple minimaliste qui va ajouter toutes les classes <literal>*Test</literal>
      trouvées dans les fichiers <filename>*Test.php</filename> quand
      <filename>Tests</filename> est parcouru récursivement.
    </para>

    <example id="organizing-tests.xml-configuration.examples.phpunit.xml">
      <title>Composer une suite de tests en utilisant la configuration XML</title>
      <programlisting><![CDATA[<phpunit>
  <testsuites>
    <testsuite name="Object_Freezer">
      <directory>Tests</directory>
    </testsuite>
  </testsuites>
</phpunit>]]></programlisting>
    </example>

    <para>
      L'ordre dans lequel les tests sont exécutés peut être rendu explicite :
    </para>

    <example id="organizing-tests.xml-configuration.examples.phpunit.xml2">
      <title>Composer une suite de tests en utilisant la configuration XML</title>
      <programlisting><![CDATA[<phpunit>
  <testsuites>
    <testsuite name="Object_Freezer">
      <file>Tests/Freezer/HashGenerator/NonRecursiveSHA1Test.php</file>
      <file>Tests/Freezer/IdGenerator/UUIDTest.php</file>
      <file>Tests/Freezer/UtilTest.php</file>
      <file>Tests/FreezerTest.php</file>
      <file>Tests/Freezer/StorageTest.php</file>
      <file>Tests/Freezer/Storage/CouchDB/WithLazyLoadTest.php</file>
      <file>Tests/Freezer/Storage/CouchDB/WithoutLazyLoadTest.php</file>
    </testsuite>
  </testsuites>
</phpunit>]]></programlisting>
    </example>
  </section>
</chapter>
