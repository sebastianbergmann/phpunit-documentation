<?xml version="1.0" encoding="utf-8" ?>
<appendix id="appendixes.assertions">
  <title>アサーション</title>

  <para>
    この節では、利用可能なアサーションメソッドの一覧を示します。
  </para>

  <section id="appendixes.assertions.assertArrayHasKey">
    <title>assertArrayHasKey()</title>
    <indexterm><primary>assertArrayHasKey()</primary></indexterm>
    <indexterm><primary>assertArrayNotHasKey()</primary></indexterm>
    <para><literal>assertArrayHasKey(mixed $key, array $array[, string $message = ''])</literal></para>
    <para><literal>$array</literal> にキー <literal>$key</literal> が存在しない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertArrayNotHasKey()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertArrayHasKey.example">
      <title>assertArrayHasKey() の使用法</title>
      <programlisting><![CDATA[<?php
class ArrayHasKeyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertArrayHasKey('foo', array('bar' => 'baz'));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ArrayHasKeyTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ArrayHasKeyTest::testFailure
Failed asserting that an array has the key 'foo'.

/home/sb/ArrayHasKeyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertArraySubset">
    <title>assertArraySubset()</title>
    <indexterm><primary>assertArraySubset()</primary></indexterm>
    <indexterm><primary>assertArraySubset()</primary></indexterm>
    <para><literal>assertArraySubset(array $subset, array $array[, bool $strict = '', string $message = ''])</literal></para>
    <para><literal>$array</literal> が <literal>$subset</literal> を含まない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>$strict</literal> フラグを使うと、配列内のオブジェクトの比較にその識別子を利用します。</para>
    <example id="appendixes.assertions.assertArraySubset.example">
      <title>Usage of assertArraySubset()</title>
      <programlisting><![CDATA[<?php
class ArraySubsetTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertArraySubset(['config' => ['key-a', 'key-b']], ['config' => ['key-a']]);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ArrayHasKeyTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) Epilog\EpilogTest::testNoFollowOption
Failed asserting that an array has the subset Array &0 (
    'config' => Array &1 (
        0 => 'key-a'
        1 => 'key-b'
    )
).

/home/sb/ArraySubsetTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertClassHasAttribute">
    <title>assertClassHasAttribute()</title>
    <indexterm><primary>assertClassHasAttribute()</primary></indexterm>
    <indexterm><primary>assertClassNotHasAttribute()</primary></indexterm>
    <para><literal>assertClassHasAttribute(string $attributeName, string $className[, string $message = ''])</literal></para>
    <para><literal>$className::attributeName</literal> が存在しない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertClassNotHasAttribute()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertClassHasAttribute.example">
      <title>assertClassHasAttribute() の使用法</title>
      <programlisting><![CDATA[<?php
class ClassHasAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertClassHasAttribute('foo', 'stdClass');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ClassHasAttributeTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasAttributeTest::testFailure
Failed asserting that class "stdClass" has attribute "foo".

/home/sb/ClassHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertClassHasStaticAttribute">
    <title>assertClassHasStaticAttribute()</title>
    <indexterm><primary>assertClassHasStaticAttribute()</primary></indexterm>
    <indexterm><primary>assertClassNotHasStaticAttribute()</primary></indexterm>
    <para><literal>assertClassHasStaticAttribute(string $attributeName, string $className[, string $message = ''])</literal></para>
    <para><literal>$className::attributeName</literal> が存在しない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertClassNotHasStaticAttribute()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertClassHasStaticAttribute.example">
      <title>assertClassHasStaticAttribute() の使用法</title>
      <programlisting><![CDATA[<?php
class ClassHasStaticAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertClassHasStaticAttribute('foo', 'stdClass');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ClassHasStaticAttributeTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ClassHasStaticAttributeTest::testFailure
Failed asserting that class "stdClass" has static attribute "foo".

/home/sb/ClassHasStaticAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertContains">
    <title>assertContains()</title>
    <indexterm><primary>assertContains()</primary></indexterm>
    <indexterm><primary>assertNotContains()</primary></indexterm>
    <indexterm><primary>assertAttributeContains()</primary></indexterm>
    <indexterm><primary>assertAttributeNotContains()</primary></indexterm>
    <para><literal>assertContains(mixed $needle, Iterator|array $haystack[, string $message = ''])</literal></para>
    <para><literal>$needle</literal> が <literal>$haystack</literal> の要素でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotContains()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeContains()</literal> と <literal>assertAttributeNotContains()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を haystack として使用することができます。</para>
    <example id="appendixes.assertions.assertContains.example">
      <title>assertContains() の使用法</title>
      <programlisting><![CDATA[<?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertContains(4, array(1, 2, 3));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ContainsTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that an array contains 4.

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>

    <para><literal>assertContains(string $needle, string $haystack[, string $message = '', boolean $ignoreCase = FALSE])</literal></para>
    <para><literal>$needle</literal> が <literal>$haystack</literal> の部分文字列でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>$ignoreCase</literal> が <literal>TRUE</literal> の場合、テストで大文字小文字を区別しなくなります。</para>
    <example id="appendixes.assertions.assertContains.example2">
      <title>assertContains() の使用法</title>
      <programlisting><![CDATA[<?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertContains('baz', 'foobar');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ContainsTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'foobar' contains "baz".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>

    <example id="appendixes.assertions.assertContains.example3">
      <title>assertContains() で $ignoreCase を使う方法</title>
      <programlisting><![CDATA[<?php
class ContainsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertContains('foo', 'FooBar');
    }

    public function testOK()
    {
        self::assertContains('foo', 'FooBar', '', true);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ContainsTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F.

Time: 0 seconds, Memory: 2.75Mb

There was 1 failure:

1) ContainsTest::testFailure
Failed asserting that 'FooBar' contains "foo".

/home/sb/ContainsTest.php:6

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertContainsOnly">
    <title>assertContainsOnly()</title>
    <indexterm><primary>assertContainsOnly()</primary></indexterm>
    <indexterm><primary>assertNotContainsOnly()</primary></indexterm>
    <indexterm><primary>assertAttributeContainsOnly()</primary></indexterm>
    <indexterm><primary>assertAttributeNotContainsOnly()</primary></indexterm>
    <para><literal>assertContainsOnly(string $type, Iterator|array $haystack[, boolean $isNativeType = NULL, string $message = ''])</literal></para>
    <para><literal>$haystack</literal> の中身の型が <literal>$type</literal> だけではない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>$isNativeType</literal> はフラグで、<literal>$type</literal> がネイティブな PHP の型であるかどうかを表します。</para>
    <para><literal>assertNotContainsOnly()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeContainsOnly()</literal> と <literal>assertAttributeNotContainsOnly()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を haystack として使用することができます。</para>
    <example id="appendixes.assertions.assertContainsOnly.example">
      <title>assertContainsOnly() の使用法</title>
      <programlisting><![CDATA[<?php
class ContainsOnlyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertContainsOnly('string', array('1', '2', 3));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ContainsOnlyTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyTest::testFailure
Failed asserting that Array (
    0 => '1'
    1 => '2'
    2 => 3
) contains only values of type "string".

/home/sb/ContainsOnlyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>
  <section id="appendixes.assertions.assertContainsOnlyInstancesOf">
    <title>assertContainsOnlyInstancesOf()</title>
    <indexterm><primary>assertContainsOnlyInstancesOf()</primary></indexterm>
    <para><literal>assertContainsOnlyInstancesOf(string $classname, Traversable|array $haystack[, string $message = ''])</literal></para>
    <para><literal>$haystack</literal> が <literal>$classname</literal> クラスの唯一のインスタンスを含まない場合にエラー <literal>$message</literal> を報告します。</para>
    <example id="appendixes.assertions.assertContainsOnlyInstancesOf.example">
      <title>assertContainsOnlyInstancesOf() の使用法</title>
      <programlisting><![CDATA[<?php
class ContainsOnlyInstancesOfTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertContainsOnlyInstancesOf('Foo', array(new Foo(), new Bar(), new Foo()));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ContainsOnlyInstancesOfTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) ContainsOnlyInstancesOfTest::testFailure
Failed asserting that Array ([0]=> Bar Object(...)) is an instance of class "Foo".

/home/sb/ContainsOnlyInstancesOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>
  <section id="appendixes.assertions.assertCount">
    <title>assertCount()</title>
    <indexterm><primary>assertCount()</primary></indexterm>
    <indexterm><primary>assertNotCount()</primary></indexterm>
    <para><literal>assertCount($expectedCount, $haystack[, string $message = ''])</literal></para>
    <para><literal>$haystack</literal> の要素数が <literal>$expectedCount</literal> でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotCount()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertCount.example">
      <title>assertCount() の使用法</title>
      <programlisting><![CDATA[<?php
class CountTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertCount(0, array('foo'));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit CountTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) CountTest::testFailure
Failed asserting that actual size 1 matches expected size 0.

/home/sb/CountTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertEmpty">
    <title>assertEmpty()</title>
    <indexterm><primary>assertEmpty()</primary></indexterm>
    <indexterm><primary>assertNotEmpty()</primary></indexterm>
    <indexterm><primary>assertAttributeEmpty()</primary></indexterm>
    <indexterm><primary>assertAttributeNotEmpty()</primary></indexterm>
    <para><literal>assertEmpty(mixed $actual[, string $message = ''])</literal></para>
    <para><literal>$actual</literal> が空でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotEmpty()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeEmpty()</literal> および <literal>assertAttributeNotEmpty()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性に対して使えます。</para>
    <example id="appendixes.assertions.assertEmpty.example">
      <title>assertEmpty() の使用法</title>
      <programlisting><![CDATA[<?php
class EmptyTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertEmpty(array('foo'));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EmptyTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) EmptyTest::testFailure
Failed asserting that an array is empty.

/home/sb/EmptyTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertEqualXMLStructure">
    <title>assertEqualXMLStructure()</title>
    <indexterm><primary>assertEqualXMLStructure()</primary></indexterm>
    <para><literal>assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement[, boolean $checkAttributes = FALSE, string $message = ''])</literal></para>
    <para><literal>$actualElement</literal> の DOMElement の XML 構造が <literal>$expectedElement</literal> の DOMElement の XML 構造と等しくない場合にエラー <literal>$message</literal> を報告します。</para>
    <example id="appendixes.assertions.assertEqualXMLStructure.example">
      <title>assertEqualXMLStructure() の使用法</title>
      <programlisting><![CDATA[<?php
class EqualXMLStructureTest extends PHPUnit_Framework_TestCase
{
    public function testFailureWithDifferentNodeNames()
    {
        $expected = new DOMElement('foo');
        $actual = new DOMElement('bar');

        self::assertEqualXMLStructure($expected, $actual);
    }

    public function testFailureWithDifferentNodeAttributes()
    {
        $expected = new DOMDocument;
        $expected->loadXML('<foo bar="true" />');

        $actual = new DOMDocument;
        $actual->loadXML('<foo/>');

        self::assertEqualXMLStructure(
          $expected->firstChild, $actual->firstChild, TRUE
        );
    }

    public function testFailureWithDifferentChildrenCount()
    {
        $expected = new DOMDocument;
        $expected->loadXML('<foo><bar/><bar/><bar/></foo>');

        $actual = new DOMDocument;
        $actual->loadXML('<foo><bar/></foo>');

        self::assertEqualXMLStructure(
          $expected->firstChild, $actual->firstChild
        );
    }

    public function testFailureWithDifferentChildren()
    {
        $expected = new DOMDocument;
        $expected->loadXML('<foo><bar/><bar/><bar/></foo>');

        $actual = new DOMDocument;
        $actual->loadXML('<foo><baz/><baz/><baz/></foo>');

        self::assertEqualXMLStructure(
          $expected->firstChild, $actual->firstChild
        );
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EqualXMLStructureTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFFF

Time: 0 seconds, Memory: 5.75Mb

There were 4 failures:

1) EqualXMLStructureTest::testFailureWithDifferentNodeNames
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'foo'
+'bar'

/home/sb/EqualXMLStructureTest.php:9

2) EqualXMLStructureTest::testFailureWithDifferentNodeAttributes
Number of attributes on node "foo" does not match
Failed asserting that 0 matches expected 1.

/home/sb/EqualXMLStructureTest.php:22

3) EqualXMLStructureTest::testFailureWithDifferentChildrenCount
Number of child nodes of "foo" differs
Failed asserting that 1 matches expected 3.

/home/sb/EqualXMLStructureTest.php:35

4) EqualXMLStructureTest::testFailureWithDifferentChildren
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualXMLStructureTest.php:48

FAILURES!
Tests: 4, Assertions: 8, Failures: 4.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertEquals">
    <title>assertEquals()</title>
    <indexterm><primary>assertEquals()</primary></indexterm>
    <indexterm><primary>assertNotEquals()</primary></indexterm>
    <indexterm><primary>assertAttributeEquals()</primary></indexterm>
    <indexterm><primary>assertAttributeNotEquals()</primary></indexterm>
    <para><literal>assertEquals(mixed $expected, mixed $actual[, string $message = ''])</literal></para>
    <para>2 つの変数 <literal>$expected</literal> と <literal>$actual</literal> が等しくない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotEquals()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeEquals()</literal> と <literal>assertAttributeNotEquals()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を実際の値として使用することができます。</para>
    <example id="appendixes.assertions.assertEquals.example">
      <title>assertEquals() の使用法</title>
      <programlisting><![CDATA[<?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertEquals(1, 0);
    }

    public function testFailure2()
    {
        self::assertEquals('bar', 'baz');
    }

    public function testFailure3()
    {
        self::assertEquals("foo\nbar\nbaz\n", "foo\nbah\nbaz\n");
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EqualsTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

FFF

Time: 0 seconds, Memory: 5.25Mb

There were 3 failures:

1) EqualsTest::testFailure
Failed asserting that 0 matches expected 1.

/home/sb/EqualsTest.php:6

2) EqualsTest::testFailure2
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'bar'
+'baz'

/home/sb/EqualsTest.php:11

3) EqualsTest::testFailure3
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
 'foo
-bar
+bah
 baz
 '

/home/sb/EqualsTest.php:16

FAILURES!
Tests: 3, Assertions: 3, Failures: 3.</screen>
    </example>

    <para>引数 <literal>$expected</literal> と <literal>$actual</literal> の型により特化した比較については、以下を参照ください。</para>

    <para><literal>assertEquals(float $expected, float $actual[, string $message = '', float $delta = 0])</literal></para>
    <para>2 つの float 値 <literal>$expected</literal> と <literal>$actual</literal> の誤差が <literal>$delta</literal> より大きい場合にエラー <literal>$message</literal> を報告します。</para>
    <para>なぜ <literal>$delta</literal> が必要となるのかについては "<ulink url="http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html">What Every Computer Scientist Should Know About Floating-Point Arithmetic</ulink>" を参照ください。</para>
    <example id="appendixes.assertions.assertEquals.example2">
      <title>float 値での assertEquals() の使用法</title>
      <programlisting><![CDATA[<?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testSuccess()
    {
        self::assertEquals(1.0, 1.1, '', 0.2);
    }

    public function testFailure()
    {
        self::assertEquals(1.0, 1.1);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EqualsTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

.F

Time: 0 seconds, Memory: 5.75Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that 1.1 matches expected 1.0.

/home/sb/EqualsTest.php:11

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.</screen>
    </example>

    <para><literal>assertEquals(DOMDocument $expected, DOMDocument $actual[, string $message = ''])</literal></para>
    <para>2 つの DOMDocument オブジェクト <literal>$expected</literal> と <literal>$actual</literal> で表される XML ドキュメントが (コメントを除去して正規化した状態で) 等しくない場合にエラー <literal>$message</literal> を報告します。</para>
    <example id="appendixes.assertions.assertEquals.example3">
      <title>DOMDocument オブジェクトでの assertEquals() の使用法</title>
      <programlisting><![CDATA[<?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $expected = new DOMDocument;
        $expected->loadXML('<foo><bar/></foo>');

        $actual = new DOMDocument;
        $actual->loadXML('<bar><foo/></bar>');

        self::assertEquals($expected, $actual);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EqualsTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 <?xml version="1.0"?>
-<foo>
-  <bar/>
-</foo>
+<bar>
+  <foo/>
+</bar>

/home/sb/EqualsTest.php:12

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>

    <para><literal>assertEquals(object $expected, object $actual[, string $message = ''])</literal></para>
    <para>2 つのオブジェクト <literal>$expected</literal> と <literal>$actual</literal> が同じ属性値を持たない場合にエラー <literal>$message</literal> を報告します。</para>
    <example id="appendixes.assertions.assertEquals.example4">
      <title>オブジェクトでの assertEquals() の使用法</title>
      <programlisting><![CDATA[<?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        $expected = new stdClass;
        $expected->foo = 'foo';
        $expected->bar = 'bar';

        $actual = new stdClass;
        $actual->foo = 'bar';
        $actual->baz = 'bar';

        self::assertEquals($expected, $actual);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EqualsTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
-    'foo' => 'foo'
-    'bar' => 'bar'
+    'foo' => 'bar'
+    'baz' => 'bar'
 )

/home/sb/EqualsTest.php:14

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>

    <para><literal>assertEquals(array $expected, array $actual[, string $message = ''])</literal></para>
    <para>2 つの配列 <literal>$expected</literal> と <literal>$actual</literal> が等しくない場合にエラー <literal>$message</literal> を報告します。</para>

    <example id="appendixes.assertions.assertEquals.example5">
      <title>配列での assertEquals() の使用法</title>
      <programlisting><![CDATA[<?php
class EqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertEquals(array('a', 'b', 'c'), array('a', 'c', 'd'));
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit EqualsTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) EqualsTest::testFailure
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
     0 => 'a'
-    1 => 'b'
-    2 => 'c'
+    1 => 'c'
+    2 => 'd'
 )

/home/sb/EqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertFalse">
    <title>assertFalse()</title>
    <indexterm><primary>assertFalse()</primary></indexterm>
    <para><literal>assertFalse(bool $condition[, string $message = ''])</literal></para>
    <para><literal>$condition</literal> が <literal>TRUE</literal> の場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotFalse()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertFalse.example">
      <title>assertFalse() の使用法</title>
      <programlisting><![CDATA[<?php
class FalseTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertFalse(TRUE);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit FalseTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) FalseTest::testFailure
Failed asserting that true is false.

/home/sb/FalseTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertFileEquals">
    <title>assertFileEquals()</title>
    <indexterm><primary>assertFileEquals()</primary></indexterm>
    <indexterm><primary>assertFileNotEquals()</primary></indexterm>
    <para><literal>assertFileEquals(string $expected, string $actual[, string $message = ''])</literal></para>
    <para><literal>$expected</literal> で指定したファイルと <literal>$actual</literal> で指定したファイルの内容が異なる場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertFileNotEquals()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertFileEquals.example">
      <title>assertFileEquals() の使用法</title>
      <programlisting><![CDATA[<?php
class FileEqualsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertFileEquals('/home/sb/expected', '/home/sb/actual');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit FileEqualsTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) FileEqualsTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
+'actual
 '

/home/sb/FileEqualsTest.php:6

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertFileExists">
    <title>assertFileExists()</title>
    <indexterm><primary>assertFileExists()</primary></indexterm>
    <indexterm><primary>assertFileNotExists()</primary></indexterm>
    <para><literal>assertFileExists(string $filename[, string $message = ''])</literal></para>
    <para>ファイル <literal>$filename</literal> が存在しない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertFileNotExists()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertFileExists.example">
      <title>assertFileExists() の使用法</title>
      <programlisting><![CDATA[<?php
class FileExistsTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertFileExists('/path/to/file');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit FileExistsTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) FileExistsTest::testFailure
Failed asserting that file "/path/to/file" exists.

/home/sb/FileExistsTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertGreaterThan">
    <title>assertGreaterThan()</title>
    <indexterm><primary>assertGreaterThan()</primary></indexterm>
    <indexterm><primary>assertAttributeGreaterThan()</primary></indexterm>
    <para><literal>assertGreaterThan(mixed $expected, mixed $actual[, string $message = ''])</literal></para>
    <para><literal>$actual</literal> の値が <literal>$expected</literal> の値より大きくない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertAttributeGreaterThan()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を実際の値として使用することができます。</para>
    <example id="appendixes.assertions.assertGreaterThan.example">
      <title>assertGreaterThan() の使用法</title>
      <programlisting><![CDATA[<?php
class GreaterThanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertGreaterThan(2, 1);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit GreaterThanTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) GreaterThanTest::testFailure
Failed asserting that 1 is greater than 2.

/home/sb/GreaterThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertGreaterThanOrEqual">
    <title>assertGreaterThanOrEqual()</title>
    <indexterm><primary>assertGreaterThanOrEqual()</primary></indexterm>
    <indexterm><primary>assertAttributeGreaterThanOrEqual()</primary></indexterm>
    <para><literal>assertGreaterThanOrEqual(mixed $expected, mixed $actual[, string $message = ''])</literal></para>
    <para><literal>$actual</literal> の値が <literal>$expected</literal> の値以上でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertAttributeGreaterThanOrEqual()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を実際の値として使用することができます。</para>
    <example id="appendixes.assertions.assertGreaterThanOrEqual.example">
      <title>assertGreaterThanOrEqual() の使用法</title>
      <programlisting><![CDATA[<?php
class GreatThanOrEqualTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertGreaterThanOrEqual(2, 1);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit GreaterThanOrEqualTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) GreatThanOrEqualTest::testFailure
Failed asserting that 1 is equal to 2 or is greater than 2.

/home/sb/GreaterThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertInstanceOf">
    <title>assertInstanceOf()</title>
    <indexterm><primary>assertInstanceOf()</primary></indexterm>
    <indexterm><primary>assertNotInstanceOf()</primary></indexterm>
    <indexterm><primary>assertAttributeInstanceOf()</primary></indexterm>
    <indexterm><primary>assertAttributeNotInstanceOf()</primary></indexterm>
    <para><literal>assertInstanceOf($expected, $actual[, $message = ''])</literal></para>
    <para><literal>$actual</literal> が <literal>$expected</literal> のインスタンスでない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotInstanceOf()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeInstanceOf()</literal> および <literal>assertAttributeNotInstanceOf()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性に対して使えます。</para>
    <example id="appendixes.assertions.assertInstanceOf.example">
      <title>assertInstanceOf() の使用法</title>
      <programlisting><![CDATA[<?php
class InstanceOfTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertInstanceOf('RuntimeException', new Exception);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit InstanceOfTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InstanceOfTest::testFailure
Failed asserting that Exception Object (...) is an instance of class "RuntimeException".

/home/sb/InstanceOfTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertInternalType">
    <title>assertInternalType()</title>
    <indexterm><primary>assertInternalType()</primary></indexterm>
    <indexterm><primary>assertNotInternalType()</primary></indexterm>
    <indexterm><primary>assertAttributeInternalType()</primary></indexterm>
    <indexterm><primary>assertAttributeNotInternalType()</primary></indexterm>
    <para><literal>assertInternalType($expected, $actual[, $message = ''])</literal></para>
    <para><literal>$actual</literal> の型が <literal>$expected</literal> でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotInternalType()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeInternalType()</literal> および <literal>assertAttributeNotInternalType()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性に対して使えます。</para>
    <example id="appendixes.assertions.assertInternalType.example">
      <title>assertInternalType() の使用法</title>
      <programlisting><![CDATA[<?php
class InternalTypeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertInternalType('string', 42);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit InternalTypeTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) InternalTypeTest::testFailure
Failed asserting that 42 is of type "string".

/home/sb/InternalTypeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertJsonFileEqualsJsonFile">
    <title>assertJsonFileEqualsJsonFile()</title>
    <indexterm><primary>assertJsonFileEqualsJsonFile()</primary></indexterm>
    <indexterm><primary>assertJsonFileNotEqualsJsonFile()</primary></indexterm>
    <para><literal>assertJsonFileEqualsJsonFile(mixed $expectedFile, mixed $actualFile[, string $message = ''])</literal></para>
    <para>
      <literal>$actualFile</literal> の値が
      <literal>$expectedFile</literal> の値にマッチしない場合にエラー <literal>$message</literal> を報告します。
    </para>
    <example id="appendixes.assertions.assertJsonFileEqualsJsonFile.example">
      <title>assertJsonFileEqualsJsonFile() の使用法</title>
      <programlisting><![CDATA[<?php
class JsonFileEqualsJsonFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertJsonFileEqualsJsonFile(
          'path/to/fixture/file', 'path/to/actual/file');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit JsonFileEqualsJsonFileTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonFileEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"Tux"}' matches JSON string "["Mascott", "Tux", "OS", "Linux"]".

/home/sb/JsonFileEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertJsonStringEqualsJsonFile">
    <title>assertJsonStringEqualsJsonFile()</title>
    <indexterm><primary>assertJsonStringEqualsJsonFile()</primary></indexterm>
    <indexterm><primary>assertJsonStringNotEqualsJsonFile()</primary></indexterm>
    <para><literal>assertJsonStringEqualsJsonFile(mixed $expectedFile, mixed $actualJson[, string $message = ''])</literal></para>
    <para>
      <literal>$actualJson</literal> の値が
      <literal>$expectedFile</literal> の値にマッチしない場合にエラー <literal>$message</literal> を報告します。
    </para>
    <example id="appendixes.assertions.assertJsonStringEqualsJsonFile.example">
      <title>assertJsonStringEqualsJsonFile() の使用法</title>
      <programlisting><![CDATA[<?php
class JsonStringEqualsJsonFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertJsonStringEqualsJsonFile(
          'path/to/fixture/file', json_encode(array("Mascott" => "ux"))
        );
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit JsonStringEqualsJsonFileTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonFile::testFailure
Failed asserting that '{"Mascott":"ux"}' matches JSON string "{"Mascott":"Tux"}".

/home/sb/JsonStringEqualsJsonFileTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertJsonStringEqualsJsonString">
    <title>assertJsonStringEqualsJsonString()</title>
    <indexterm><primary>assertJsonStringEqualsJsonString()</primary></indexterm>
    <indexterm><primary>assertJsonStringNotEqualsJsonString()</primary></indexterm>
    <para><literal>assertJsonStringEqualsJsonString(mixed $expectedJson, mixed $actualJson[, string $message = ''])</literal></para>
    <para>
      <literal>$actualJson</literal> の値が
      <literal>$expectedJson</literal> の値にマッチしない場合にエラー <literal>$message</literal> を報告します。
    </para>
    <example id="appendixes.assertions.assertJsonStringEqualsJsonString.example">
      <title>assertJsonStringEqualsJsonString() の使用法</title>
      <programlisting><![CDATA[<?php
class JsonStringEqualsJsonStringTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertJsonStringEqualsJsonString(
          json_encode(array("Mascott" => "Tux")), json_encode(array("Mascott" => "ux"))
        );
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit JsonStringEqualsJsonStringTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) JsonStringEqualsJsonStringTest::testFailure
Failed asserting that two objects are equal.
--- Expected
+++ Actual
@@ @@
 stdClass Object (
 -    'Mascott' => 'Tux'
 +    'Mascott' => 'ux'
)

/home/sb/JsonStringEqualsJsonStringTest.php:5

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertLessThan">
    <title>assertLessThan()</title>
    <indexterm><primary>assertLessThan()</primary></indexterm>
    <indexterm><primary>assertAttributeLessThan()</primary></indexterm>
    <para><literal>assertLessThan(mixed $expected, mixed $actual[, string $message = ''])</literal></para>
    <para><literal>$actual</literal> の値が <literal>$expected</literal> の値より小さくない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertAttributeLessThan()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を実際の値として使用することができます。</para>
    <example id="appendixes.assertions.assertLessThan.example">
      <title>assertLessThan() の使用法</title>
      <programlisting><![CDATA[<?php
class LessThanTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertLessThan(1, 2);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit LessThanTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) LessThanTest::testFailure
Failed asserting that 2 is less than 1.

/home/sb/LessThanTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertLessThanOrEqual">
    <title>assertLessThanOrEqual()</title>
    <indexterm><primary>assertLessThanOrEqual()</primary></indexterm>
    <indexterm><primary>assertAttributeLessThanOrEqual()</primary></indexterm>
    <para><literal>assertLessThanOrEqual(mixed $expected, mixed $actual[, string $message = ''])</literal></para>
    <para><literal>$actual</literal> の値が <literal>$expected</literal> の値以下でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertAttributeLessThanOrEqual()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を実際の値として使用することができます。</para>
    <example id="appendixes.assertions.assertLessThanOrEqual.example">
      <title>assertLessThanOrEqual() の使用法</title>
      <programlisting><![CDATA[<?php
class LessThanOrEqualTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertLessThanOrEqual(1, 2);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit LessThanOrEqualTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) LessThanOrEqualTest::testFailure
Failed asserting that 2 is equal to 1 or is less than 1.

/home/sb/LessThanOrEqualTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertNull">
    <title>assertNull()</title>
    <indexterm><primary>assertNull()</primary></indexterm>
    <indexterm><primary>assertNotNull()</primary></indexterm>
    <para><literal>assertNull(mixed $variable[, string $message = ''])</literal></para>
    <para><literal>$variable</literal> が <literal>NULL</literal> でないときにエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotNull()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertNull.example">
      <title>assertNull() の使用法</title>
      <programlisting><![CDATA[<?php
class NullTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertNull('foo');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit NotNullTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) NullTest::testFailure
Failed asserting that 'foo' is null.

/home/sb/NotNullTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertObjectHasAttribute">
    <title>assertObjectHasAttribute()</title>
    <indexterm><primary>assertObjectHasAttribute()</primary></indexterm>
    <indexterm><primary>assertObjectNotHasAttribute()</primary></indexterm>
    <para><literal>assertObjectHasAttribute(string $attributeName, object $object[, string $message = ''])</literal></para>
    <para><literal>$object-&gt;attributeName</literal> が存在しない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertObjectNotHasAttribute()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertObjectHasAttribute.example">
      <title>assertObjectHasAttribute() の使用法</title>
      <programlisting><![CDATA[<?php
class ObjectHasAttributeTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertObjectHasAttribute('foo', new stdClass);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit ObjectHasAttributeTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) ObjectHasAttributeTest::testFailure
Failed asserting that object of class "stdClass" has attribute "foo".

/home/sb/ObjectHasAttributeTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertRegExp">
    <title>assertRegExp()</title>
    <indexterm><primary>assertRegExp()</primary></indexterm>
    <indexterm><primary>assertNotRegExp()</primary></indexterm>
    <para><literal>assertRegExp(string $pattern, string $string[, string $message = ''])</literal></para>
    <para><literal>$string</literal> が正規表現 <literal>$pattern</literal> にマッチしない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotRegExp()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertRegExp.example">
      <title>assertRegExp() の使用法</title>
      <programlisting><![CDATA[<?php
class RegExpTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertRegExp('/foo/', 'bar');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit RegExpTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) RegExpTest::testFailure
Failed asserting that 'bar' matches PCRE pattern "/foo/".

/home/sb/RegExpTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertStringMatchesFormat">
    <title>assertStringMatchesFormat()</title>
    <indexterm><primary>assertStringMatchesFormat()</primary></indexterm>
    <indexterm><primary>assertStringNotMatchesFormat()</primary></indexterm>
    <para><literal>assertStringMatchesFormat(string $format, string $string[, string $message = ''])</literal></para>
    <para><literal>$string</literal> が書式文字列 <literal>$format</literal> にマッチしない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertStringNotMatchesFormat()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertStringMatchesFormat.example">
      <title>assertStringMatchesFormat() の使用法</title>
      <programlisting><![CDATA[<?php
class StringMatchesFormatTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertStringMatchesFormat('%i', 'foo');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit StringMatchesFormatTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+$/s".

/home/sb/StringMatchesFormatTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
    <para>書式文字列には次のプレースホルダを含めることができます。</para>
    <itemizedlist>
      <listitem><para><literal>%e</literal>: ディレクトリ区切り文字、たとえば Linux なら <literal>/</literal> を表します。</para></listitem>
      <listitem><para><literal>%s</literal>: 一文字以上の何か (文字あるいは空白)、ただし改行文字は含みません。</para></listitem>
      <listitem><para><literal>%S</literal>: ゼロ文字以上の何か (文字あるいは空白)、ただし改行文字は含みません。</para></listitem>
      <listitem><para><literal>%a</literal>: 一文字以上の何か (文字あるいは空白)、改行文字も含みます。</para></listitem>
      <listitem><para><literal>%A</literal>: ゼロ文字以上の何か (文字あるいは空白)、改行文字も含みます。</para></listitem>
      <listitem><para><literal>%w</literal>: ゼロ文字以上の空白。</para></listitem>
      <listitem><para><literal>%i</literal>: 符号付き整数値。例: <literal>+3142</literal>, <literal>-3142</literal></para></listitem>
      <listitem><para><literal>%d</literal>: 符号なし整数値。例: <literal>123.66</literal></para></listitem>
      <listitem><para><literal>%x</literal>: 一文字以上の十六進文字 (<literal>0-9</literal>, <literal>a-f</literal>, <literal>A-F</literal>)。</para></listitem>
      <listitem><para><literal>%f</literal>: 浮動小数点数値。例: <literal>3.142</literal>, <literal>-3.142</literal>, <literal>3.142E-10</literal>, <literal>3.142e+10</literal></para></listitem>
      <listitem><para><literal>%c</literal>: 任意の一文字。</para></listitem>
    </itemizedlist>
  </section>

  <section id="appendixes.assertions.assertStringMatchesFormatFile">
    <title>assertStringMatchesFormatFile()</title>
    <indexterm><primary>assertStringMatchesFormatFile()</primary></indexterm>
    <indexterm><primary>assertStringNotMatchesFormatFile()</primary></indexterm>
    <para><literal>assertStringMatchesFormatFile(string $formatFile, string $string[, string $message = ''])</literal></para>
    <para><literal>$string</literal> が <literal>$formatFile</literal> の内容にマッチしない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertStringNotMatchesFormatFile()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertStringMatchesFormatFile.example">
      <title>assertStringMatchesFormatFile() の使用法</title>
      <programlisting><![CDATA[<?php
class StringMatchesFormatFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertStringMatchesFormatFile('/path/to/expected.txt', 'foo');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit StringMatchesFormatFileTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringMatchesFormatFileTest::testFailure
Failed asserting that 'foo' matches PCRE pattern "/^[+-]?\d+
$/s".

/home/sb/StringMatchesFormatFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertSame">
    <title>assertSame()</title>
    <indexterm><primary>assertSame()</primary></indexterm>
    <indexterm><primary>assertNotSame()</primary></indexterm>
    <indexterm><primary>assertAttributeSame()</primary></indexterm>
    <indexterm><primary>assertAttributeNotSame()</primary></indexterm>
    <para><literal>assertSame(mixed $expected, mixed $actual[, string $message = ''])</literal></para>
    <para>2 つの変数 <literal>$expected</literal> と <literal>$actual</literal> が同じ型・同じ値でない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotSame()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <para><literal>assertAttributeSame()</literal> と <literal>assertAttributeNotSame()</literal> は便利なラッパーで、クラスやオブジェクトの <literal>public</literal>、<literal>protected</literal>、<literal>private</literal> 属性を実際の値として使用することができます。</para>
    <example id="appendixes.assertions.assertSame.example">
      <title>assertSame() の使用法</title>
      <programlisting><![CDATA[<?php
class SameTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertSame('2204', 2204);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit SameTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that 2204 is identical to '2204'.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>

    <para><literal>assertSame(object $expected, object $actual[, string $message = ''])</literal></para>
    <para>2 つの変数 <literal>$expected</literal> と <literal>$actual</literal> が同じオブジェクトを参照していない場合にエラー <literal>$message</literal> を報告します。</para>

    <example id="appendixes.assertions.assertSame.example2">
      <title>オブジェクトでの assertSame() の使用法</title>
      <programlisting><![CDATA[<?php
class SameTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertSame(new stdClass, new stdClass);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit SameTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 4.75Mb

There was 1 failure:

1) SameTest::testFailure
Failed asserting that two variables reference the same object.

/home/sb/SameTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertStringEndsWith">
    <title>assertStringEndsWith()</title>
    <indexterm><primary>assertStringEndsWith()</primary></indexterm>
    <indexterm><primary>assertStringEndsNotWith()</primary></indexterm>
    <para><literal>assertStringEndsWith(string $suffix, string $string[, string $message = ''])</literal></para>
    <para><literal>$string</literal> が <literal>$suffix</literal> で終わっていない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertStringEndsNotWith()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertStringEndsWith.example">
      <title>assertStringEndsWith() の使用法</title>
      <programlisting><![CDATA[<?php
class StringEndsWithTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertStringEndsWith('suffix', 'foo');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit StringEndsWithTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 1 second, Memory: 5.00Mb

There was 1 failure:

1) StringEndsWithTest::testFailure
Failed asserting that 'foo' ends with "suffix".

/home/sb/StringEndsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertStringEqualsFile">
    <title>assertStringEqualsFile()</title>
    <indexterm><primary>assertStringEqualsFile()</primary></indexterm>
    <indexterm><primary>assertStringNotEqualsFile()</primary></indexterm>
    <para><literal>assertStringEqualsFile(string $expectedFile, string $actualString[, string $message = ''])</literal></para>
    <para><literal>$expectedFile</literal> で指定したファイルの内容に <literal>$actualString</literal> が含まれない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertStringNotEqualsFile()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertStringEqualsFile.example">
      <title>assertStringEqualsFile() の使用法</title>
      <programlisting><![CDATA[<?php
class StringEqualsFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertStringEqualsFile('/home/sb/expected', 'actual');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit StringEqualsFileTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) StringEqualsFileTest::testFailure
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'expected
-'
+'actual'

/home/sb/StringEqualsFileTest.php:6

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertStringStartsWith">
    <title>assertStringStartsWith()</title>
    <indexterm><primary>assertStringStartsWith()</primary></indexterm>
    <indexterm><primary>assertStringStartsNotWith()</primary></indexterm>
    <para><literal>assertStringStartsWith(string $prefix, string $string[, string $message = ''])</literal></para>
    <para><literal>$string</literal> が <literal>$prefix</literal> で始まっていない場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertStringStartsNotWith()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertStringStartsWith.example">
      <title>assertStringStartsWith() の使用法</title>
      <programlisting><![CDATA[<?php
class StringStartsWithTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertStringStartsWith('prefix', 'foo');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit StringStartsWithTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) StringStartsWithTest::testFailure
Failed asserting that 'foo' starts with "prefix".

/home/sb/StringStartsWithTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertThat">
    <title>assertThat()</title>
    <indexterm><primary>assertThat()</primary></indexterm>

    <para>
      もっと複雑なアサーションを行う場合には、
      <literal>PHPUnit_Framework_Constraint</literal> クラスを使用します。
      これらは、<literal>assertThat()</literal> メソッドを使用して評価されます。
      <xref linkend="appendixes.assertions.assertThat.example" /> は、
      <literal>logicalNot()</literal> と <literal>equalTo()</literal>
      を用いて <literal>assertNotEquals()</literal>
      と同じアサーションを行う方法を示すものです。
    </para>

    <para><literal>assertThat(mixed $value, PHPUnit_Framework_Constraint $constraint[, $message = ''])</literal></para>
    <para><literal>$value</literal> が <literal>$constraint</literal> にマッチしない場合にエラー <literal>$message</literal> を報告します。</para>
    <example id="appendixes.assertions.assertThat.example">
      <title>assertThat() の使用法</title>
      <programlisting><![CDATA[<?php
class BiscuitTest extends PHPUnit_Framework_TestCase
{
    public function testEquals()
    {
        $theBiscuit = new Biscuit('Ginger');
        $myBiscuit  = new Biscuit('Ginger');

        self::assertThat(
          $theBiscuit,
          $this->logicalNot(
            $this->equalTo($myBiscuit)
          )
        );
    }
}
?>]]></programlisting>
    </example>

    <para>
      <xref linkend="appendixes.assertions.assertThat.tables.constraints" /> に、
      使用できる <literal>PHPUnit_Framework_Constraint</literal> クラスをまとめます。
    </para>

    <table id="appendixes.assertions.assertThat.tables.constraints">
      <title>制約</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>制約</entry>
            <entry>意味</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <indexterm><primary>attribute()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_Attribute attribute(PHPUnit_Framework_Constraint $constraint, $attributeName)</literal></entry>
            <entry>別の制約を、クラスあるいはオブジェクトの属性として適用する制約。</entry>
          </row>
          <row>
            <indexterm><primary>anything()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsAnything anything()</literal></entry>
            <entry>あらゆる入力値を受け入れる制約。</entry>
          </row>
          <row>
            <indexterm><primary>arrayHasKey()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_ArrayHasKey arrayHasKey(mixed $key)</literal></entry>
            <entry>配列が指定したキーを保持していることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>contains()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_TraversableContains contains(mixed $value)</literal></entry>
            <entry><literal>Iterator</literal> インターフェイスを実装している <literal>array</literal> やオブジェクトが、指定した値を保持していることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>containsOnly()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_TraversableContainsOnly containsOnly(string $type)</literal></entry>
            <entry>評価対象の <literal>array</literal>、あるいは <literal>Iterator</literal> インターフェイスを実装したオブジェクトが、指定した型の唯一の値を含むことを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>containsOnlyInstancesOf()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_TraversableContainsOnly containsOnlyInstancesOf(string $classname)</literal></entry>
            <entry>評価対象の <literal>array</literal>、あるいは <literal>Iterator</literal> インターフェイスを実装したオブジェクトが、指定したクラスの唯一のインスタンスを含むことを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>equalTo()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsEqual equalTo($value, $delta = 0, $maxDepth = 10)</literal></entry>
            <entry>ある値が別の値と等しいかどうかを調べる制約。</entry>
          </row>
          <row>
            <indexterm><primary>attributeEqualTo()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_Attribute attributeEqualTo($attributeName, $value, $delta = 0, $maxDepth = 10)</literal></entry>
            <entry>ある値がクラスあるいはオブジェクトの属性と等しいかどうかを調べる制約。</entry>
          </row>
          <row>
            <indexterm><primary>fileExists()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_FileExists fileExists()</literal></entry>
            <entry>指定した名前のファイルが存在するかどうかを調べる制約。</entry>
          </row>
          <row>
            <indexterm><primary>greaterThan()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_GreaterThan greaterThan(mixed $value)</literal></entry>
            <entry>評価される値が、指定した値より大きいことを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>greaterThanOrEqual()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_Or greaterThanOrEqual(mixed $value)</literal></entry>
            <entry>評価される値が、指定した値以上であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>classHasAttribute()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_ClassHasAttribute classHasAttribute(string $attributeName)</literal></entry>
            <entry>評価されるクラスに、指定した属性があることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>classHasStaticAttribute()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_ClassHasStaticAttribute classHasStaticAttribute(string $attributeName)</literal></entry>
            <entry>評価されるクラスに、指定した static 属性があることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>hasAttribute()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_ObjectHasAttribute hasAttribute(string $attributeName)</literal></entry>
            <entry>評価されるオブジェクトが、指定した属性を保持していることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>identicalTo()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsIdentical identicalTo(mixed $value)</literal></entry>
            <entry>ある値が別の値と同一であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>isFalse()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsFalse isFalse()</literal></entry>
            <entry>評価される値が <literal>FALSE</literal> であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>isInstanceOf()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsInstanceOf isInstanceOf(string $className)</literal></entry>
            <entry>評価されるオブジェクトが、指定したクラスのインスタンスであることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>isNull()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsNull isNull()</literal></entry>
            <entry>評価される値が <literal>NULL</literal> であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>isTrue()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsTrue isTrue()</literal></entry>
            <entry>評価される値が <literal>TRUE</literal> であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>isType()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_IsType isType(string $type)</literal></entry>
            <entry>評価される値が、指定した型であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>lessThan()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_LessThan lessThan(mixed $value)</literal></entry>
            <entry>評価される値が、指定した値より小さいことを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>lessThanOrEqual()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_Or lessThanOrEqual(mixed $value)</literal></entry>
            <entry>評価される値が、指定した値以下であることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>logicalAnd()</primary></indexterm>
            <entry><literal>logicalAnd()</literal></entry>
            <entry>論理積 (AND)。</entry>
          </row>
          <row>
            <indexterm><primary>logicalNot()</primary></indexterm>
            <entry><literal>logicalNot(PHPUnit_Framework_Constraint $constraint)</literal></entry>
            <entry>論理否定 (NOT)。</entry>
          </row>
          <row>
            <indexterm><primary>logicalOr()</primary></indexterm>
            <entry><literal>logicalOr()</literal></entry>
            <entry>論理和 (OR)。</entry>
          </row>
          <row>
            <indexterm><primary>logicalXor()</primary></indexterm>
            <entry><literal>logicalXor()</literal></entry>
            <entry>排他的論理和 (XOR)。</entry>
          </row>
          <row>
            <indexterm><primary>matchesRegularExpression()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_PCREMatch matchesRegularExpression(string $pattern)</literal></entry>
            <entry>評価される文字列が、正規表現にマッチすることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>stringContains()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_StringContains stringContains(string $string, bool $case)</literal></entry>
            <entry>評価される文字列が、指定した文字列を含むことを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>stringEndsWith()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_StringEndsWith stringEndsWith(string $suffix)</literal></entry>
            <entry>評価される文字列が、指定したサフィックスで終わることを保証する制約。</entry>
          </row>
          <row>
            <indexterm><primary>stringStartsWith()</primary></indexterm>
            <entry><literal>PHPUnit_Framework_Constraint_StringStartsWith stringStartsWith(string $prefix)</literal></entry>
            <entry>評価される文字列が、指定したプレフィックスで始まることを保証する制約。</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="appendixes.assertions.assertTrue">
    <title>assertTrue()</title>
    <indexterm><primary>assertTrue()</primary></indexterm>
    <para><literal>assertTrue(bool $condition[, string $message = ''])</literal></para>
    <para><literal>$condition</literal> が <literal>FALSE</literal> の場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertNotTrue()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertTrue.example">
      <title>assertTrue() の使用法</title>
      <programlisting><![CDATA[<?php
class TrueTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertTrue(FALSE);
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit TrueTest</userinput>
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) TrueTest::testFailure
Failed asserting that false is true.

/home/sb/TrueTest.php:6

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.</screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertXmlFileEqualsXmlFile">
    <title>assertXmlFileEqualsXmlFile()</title>
    <indexterm><primary>assertXmlFileEqualsXmlFile()</primary></indexterm>
    <indexterm><primary>assertXmlFileNotEqualsXmlFile()</primary></indexterm>
    <para><literal>assertXmlFileEqualsXmlFile(string $expectedFile, string $actualFile[, string $message = ''])</literal></para>
    <para><literal>$actualFile</literal> の XML ドキュメントが <literal>$expectedFile</literal> の XML ドキュメントと異なる場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertXmlFileNotEqualsXmlFile()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertXmlFileEqualsXmlFile.example">
      <title>assertXmlFileEqualsXmlFile() の使用法</title>
      <programlisting><![CDATA[<?php
class XmlFileEqualsXmlFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertXmlFileEqualsXmlFile(
          '/home/sb/expected.xml', '/home/sb/actual.xml');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit XmlFileEqualsXmlFileTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlFileEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 <?xml version="1.0"?>
 <foo>
-  <bar/>
+  <baz/>
 </foo>

/home/sb/XmlFileEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 3, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertXmlStringEqualsXmlFile">
    <title>assertXmlStringEqualsXmlFile()</title>
    <indexterm><primary>assertXmlStringEqualsXmlFile()</primary></indexterm>
    <indexterm><primary>assertXmlStringNotEqualsXmlFile()</primary></indexterm>
    <para><literal>assertXmlStringEqualsXmlFile(string $expectedFile, string $actualXml[, string $message = ''])</literal></para>
    <para><literal>$actualXml</literal> の XML ドキュメントが <literal>$expectedFile</literal> の XML ドキュメントと異なる場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertXmlStringNotEqualsXmlFile()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertXmlStringEqualsXmlFile.example">
      <title>assertXmlStringEqualsXmlFile() の使用法</title>
      <programlisting><![CDATA[<?php
class XmlStringEqualsXmlFileTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertXmlStringEqualsXmlFile(
          '/home/sb/expected.xml', '<foo><baz/></foo>');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit XmlStringEqualsXmlFileTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.25Mb

There was 1 failure:

1) XmlStringEqualsXmlFileTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 <?xml version="1.0"?>
 <foo>
-  <bar/>
+  <baz/>
 </foo>

/home/sb/XmlStringEqualsXmlFileTest.php:7

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.]]></screen>
    </example>
  </section>

  <section id="appendixes.assertions.assertXmlStringEqualsXmlString">
    <title>assertXmlStringEqualsXmlString()</title>
    <indexterm><primary>assertXmlStringEqualsXmlString()</primary></indexterm>
    <indexterm><primary>assertXmlStringNotEqualsXmlString()</primary></indexterm>
    <para><literal>assertXmlStringEqualsXmlString(string $expectedXml, string $actualXml[, string $message = ''])</literal></para>
    <para><literal>$actualXml</literal> の XML ドキュメントが <literal>$expectedXml</literal> の XML ドキュメントと異なる場合にエラー <literal>$message</literal> を報告します。</para>
    <para><literal>assertXmlStringNotEqualsXmlString()</literal> はこのアサーションの逆で、同じ引数をとります。</para>
    <example id="appendixes.assertions.assertXmlStringEqualsXmlString.example">
      <title>assertXmlStringEqualsXmlString() の使用法</title>
      <programlisting><![CDATA[<?php
class XmlStringEqualsXmlStringTest extends PHPUnit_Framework_TestCase
{
    public function testFailure()
    {
        self::assertXmlStringEqualsXmlString(
          '<foo><bar/></foo>', '<foo><baz/></foo>');
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit XmlStringEqualsXmlStringTest</userinput><![CDATA[
PHPUnit 4.6.0 by Sebastian Bergmann and contributors.

F

Time: 0 seconds, Memory: 5.00Mb

There was 1 failure:

1) XmlStringEqualsXmlStringTest::testFailure
Failed asserting that two DOM documents are equal.
--- Expected
+++ Actual
@@ @@
 <?xml version="1.0"?>
 <foo>
-  <bar/>
+  <baz/>
 </foo>

/home/sb/XmlStringEqualsXmlStringTest.php:7

FAILURES!
Tests: 1, Assertions: 1, Failures: 1.]]></screen>
    </example>
  </section>
</appendix>

