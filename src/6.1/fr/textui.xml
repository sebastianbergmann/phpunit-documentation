<?xml version="1.0" encoding="utf-8" ?>

<chapter id="textui">
  <title>Le lanceur de tests en ligne de commandes</title>

  <para>
    Le lanceur de tests en ligne de commandes de PHPUnit peut être appelé via
    la commande <filename>phpunit</filename>. Le code suivant montre comment exécuter
    des tests avec le lanceur de tests en ligne de commandes de PHPUnit:
  </para>

  <screen><userinput>phpunit ArrayTest</userinput>
PHPUnit 6.1.0 by Sebastian Bergmann and contributors.

..

Time: 0 seconds


OK (2 tests, 2 assertions)</screen>

  <para>
    Lorsqu'il est appelé comme indiqué ci-dessus, le contrôleur de ligne de commande PHPUnit recherchera
    un fichier source <filename>ArrayTest.php</filename> dans le répertoire de travail
    courant, le chargera et s'attendra à trouver une classe de cas de test
    <literal>ArrayTest</literal>. Il exécutera alors les tests de cette classe.
  </para>

  <para>
    Pour chaque test exécuté, l'outil en ligne de commandes de PHPUnit affiche un
    caractère pour indiquer l'avancement:
  </para>

  <variablelist>
    <varlistentry>
      <term><literal>.</literal></term>
      <listitem>
        <para>
          Affiché quand le test a réussi.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><literal>F</literal></term>
      <listitem>
        <para>
          Affiché quand une assertion échoue lors de l'exécution d'une méthode de test.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><literal>E</literal></term>
      <listitem>
        <para>
          Affiché quand une erreur survient pendant l'exécution d'une méthode de test.
        </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><literal>R</literal></term>
      <listitem>
        <para>
          Affiché quand le test a été marqué comme risqué (voir
          <xref linkend="risky-tests" />).
        </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><literal>S</literal></term>
      <listitem>
        <para>
          Affiché quand le test a été sauté (voir
          <xref linkend="incomplete-and-skipped-tests" />).
        </para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><literal>I</literal></term>
      <listitem>
        <para>
          Affiché quand le test est marqué comme incomplet ou pas encore
          implémenté (voir <xref linkend="incomplete-and-skipped-tests" />).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>
    <indexterm><primary>Erreur</primary></indexterm>
    <indexterm><primary>Echec</primary></indexterm>

    PHPUnit différencie les <emphasis>échecs</emphasis> et les
    <emphasis>erreurs</emphasis>. Un échec est une assertion PHPUnit violée
    comme un appel en échec de <literal>assertEquals()</literal>.
    Une erreur est une exception inattendue ou une erreur PHP. Parfois
    cette distinction s'avère utile car les erreurs tendent à être plus faciles
    à corriger que les échecs. Si vous avez une longue liste de problèmes, il vaut
    mieux éradiquer d'abord les erreurs pour voir s'il reste encore des échecs
    uen fois qu'elles ont été corrigées.
  </para>

  <section id="textui.clioptions">
    <title>Options de la ligne de commandes</title>

    <para>
      Jetons un oeil aux options du lanceur de tests en ligne de commandes
      dans le code suivant :
    </para>

    <screen><userinput>phpunit --help</userinput>
<![CDATA[PHPUnit 6.1.0 by Sebastian Bergmann and contributors.

Usage: phpunit [options] UnitTest [UnitTest.php]
       phpunit [options] <directory>

Code Coverage Options:

  --coverage-clover <file>    Generate code coverage report in Clover XML format.
  --coverage-crap4j <file>    Generate code coverage report in Crap4J XML format.
  --coverage-html <dir>       Generate code coverage report in HTML format.
  --coverage-php <file>       Export PHP_CodeCoverage object to file.
  --coverage-text=<file>      Generate code coverage report in text format.
                              Default: Standard output.
  --coverage-xml <dir>        Generate code coverage report in PHPUnit XML format.
  --whitelist <dir>           Whitelist <dir> for code coverage analysis.
  --disable-coverage-ignore   Disable annotations for ignoring code coverage.

Logging Options:

  --log-junit <file>          Log test execution in JUnit XML format to file.
  --log-teamcity <file>       Log test execution in TeamCity format to file.
  --testdox-html <file>       Write agile documentation in HTML format to file.
  --testdox-text <file>       Write agile documentation in Text format to file.
  --testdox-xml <file>        Write agile documentation in XML format to file.
  --reverse-list              Print defects in reverse order

Test Selection Options:

  --filter <pattern>          Filter which tests to run.
  --testsuite <name,...>      Filter which testsuite to run.
  --group ...                 Only runs tests from the specified group(s).
  --exclude-group ...         Exclude tests from the specified group(s).
  --list-groups               List available test groups.
  --list-suites               List available test suites.
  --test-suffix ...           Only search for test in files with specified
                              suffix(es). Default: Test.php,.phpt

Test Execution Options:

  --dont-report-useless-tests Do not report tests that do not test anything.
  --strict-coverage           Be strict about @covers annotation usage.
  --strict-global-state       Be strict about changes to global state
  --disallow-test-output      Be strict about output during tests.
  --disallow-resource-usage   Be strict about resource usage during small tests.
  --enforce-time-limit        Enforce time limit based on test size.
  --disallow-todo-tests       Disallow @todo-annotated tests.

  --process-isolation         Run each test in a separate PHP process.
  --globals-backup            Backup and restore $GLOBALS for each test.
  --static-backup             Backup and restore static attributes for each test.

  --colors=<flag>             Use colors in output ("never", "auto" or "always").
  --columns <n>               Number of columns to use for progress output.
  --columns max               Use maximum number of columns for progress output.
  --stderr                    Write to STDERR instead of STDOUT.
  --stop-on-error             Stop execution upon first error.
  --stop-on-failure           Stop execution upon first error or failure.
  --stop-on-warning           Stop execution upon first warning.
  --stop-on-risky             Stop execution upon first risky test.
  --stop-on-skipped           Stop execution upon first skipped test.
  --stop-on-incomplete        Stop execution upon first incomplete test.
  --fail-on-warning           Treat tests with warnings as failures.
  --fail-on-risky             Treat risky tests as failures.
  -v|--verbose                Output more verbose information.
  --debug                     Display debugging information.

  --loader <loader>           TestSuiteLoader implementation to use.
  --repeat <times>            Runs the test(s) repeatedly.
  --teamcity                  Report test execution progress in TeamCity format.
  --testdox                   Report test execution progress in TestDox format.
  --testdox-group             Only include tests from the specified group(s).
  --testdox-exclude-group     Exclude tests from the specified group(s).
  --printer <printer>         TestListener implementation to use.

Configuration Options:

  --bootstrap <file>          A "bootstrap" PHP file that is run before the tests.
  -c|--configuration <file>   Read configuration from XML file.
  --no-configuration          Ignore default configuration file (phpunit.xml).
  --no-coverage               Ignore code coverage configuration.
  --no-extensions             Do not load PHPUnit extensions.
  --include-path <path(s)>    Prepend PHP's include_path with given path(s).
  -d key[=value]              Sets a php.ini value.
  --generate-configuration    Generate configuration file with suggested settings.

Miscellaneous Options:

  -h|--help                   Prints this usage information.
  --version                   Prints the version and exits.
  --atleast-version <min>     Checks that version is greater than min and exits.]]></screen>

    <variablelist>
      <varlistentry>
        <term><literal>phpunit UnitTest</literal></term>
        <listitem>
          <para>
            Exécute les tests qui sont fournis par la classe
            <literal>UnitTest</literal>. Cette classe est supposée être déclarée
            dans le fichier source <filename>UnitTest.php</filename>.
          </para>

          <para>
            <literal>UnitTest</literal> doit soit être une classe qui hérite
            de <literal>PHPUnit\Framework\TestCase</literal> soit une classe qui
            fournit une méthode <literal>public static suite()</literal> retournant
            un objet <literal>PHPUnit_Framework_Test</literal>, par exemple
            une instance de la classe
            <literal>PHPUnit_Framework_TestSuite</literal>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>phpunit UnitTest UnitTest.php</literal></term>
        <listitem>
          <para>
            Exécute les tests qui sont fournis par la classe
            <literal>UnitTest</literal>. Cette classe est supposée être déclarée
            dans le fichier source indiqué.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Couverture de code</primary></indexterm>
        <term><literal>--coverage-clover</literal></term>
        <listitem>
          <para>
            Génère un fichier de log au format XML avec les informations de couverture de code
            pour les tests exécutés. Voir <xref linkend="logging" /> pour plus de détails.
          </para>
          <para>
            Merci de noter que cette fonctionnalité n'est seulement disponible que
            lorsque les extensions tokenizer et Xdebug sont installées.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Code Coverage</primary></indexterm>
        <term><literal>--coverage-crap4j</literal></term>
        <listitem>
          <para>
            Génère un raport de couverture de code au format Crap4j. Voir
            <xref linkend="code-coverage-analysis" /> pour plus de détails.
          </para>
          <para>
            Merci de noter que cette fonctionnalité n'est seulement disponible que
            lorsque les extensions tokenizer et Xdebug sont installées.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Couverture de code</primary></indexterm>
        <indexterm><primary>Rapport</primary></indexterm>
        <term><literal>--coverage-html</literal></term>
        <listitem>
          <para>
            Génère un rapport de couverture de code au format HTML. Voir
            <xref linkend="code-coverage-analysis" /> pour plus de détails.
          </para>
          <para>
            Merci de noter que cette fonctionnalité n'est seulement disponible que
            lorsque les extensions tokenizer et Xdebug sont installées.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Couverture de code</primary></indexterm>
        <term><literal>--coverage-php</literal></term>
        <listitem>
          <para>
            Génère un objet sérialisé PHP_CodeCoverage contenant les
            informations de couverture de code.
          </para>
          <para>
            Merci de noter que cette fonctionnalité n'est seulement disponible que
            lorsque les extensions tokenizer et Xdebug sont installées.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Couverture de code</primary></indexterm>
        <term><literal>--coverage-text</literal></term>
        <listitem>
          <para>
            Génère un fichier de log ou une sortie écran sur la ligne de commandes
            dans un format lisible avec les informations de couverture de code pour les tests exécutés.
            Voir <xref linkend="logging" /> pour plus de détails.
          </para>
          <para>
            Merci de noter que cette fonctionnalité n'est seulement disponible que
            lorsque les extensions tokenizer et Xdebug sont installées.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Logfile</primary></indexterm>
        <term><literal>--log-junit</literal></term>
        <listitem>
          <para>
            Génère un fichier de log au format JUnit XML pour les tests exécutés.
            Voir <xref linkend="logging" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Documentation agile</primary></indexterm>
        <term><literal>--testdox-html</literal> et <literal>--testdox-text</literal></term>
        <listitem>
          <para>
            Génère la documentation agile au format HTML ou texte pur pour les
            tests exécutés. Voir <xref linkend="other-uses-for-tests" /> pour
            plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--filter</literal></term>
        <listitem>
          <para>
            Exécute seulement les tests dont le nom correspond à l'expression régulière donnée.
            Si le motif n'est pas entouré de délimiteurs, PHPUnit
            inclura le motif dans les délimiteurs <literal>/</literal>.
          </para>

          <para>
            Les noms de test à faire correspondre seront dans l'un des formats suivant :
          </para>

          <variablelist>
            <varlistentry>
              <term><literal>TestNamespace\TestCaseClass::testMethod</literal></term>
              <listitem>
                <para>
                  Le format de nom de test par défaut est l'équivalent de l'utilisation de
                  la constante magique <literal>__METHOD__</literal> dans
                  la méthode de test.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><literal>TestNamespace\TestCaseClass::testMethod with data set #0</literal></term>
              <listitem>
                <para>
                  Lorsqu'un test a un fournisseur de données, chaque itération des
                  données a l'index courant ajouté à la fin
                  du nom de test par défaut.
                </para>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><literal>TestNamespace\TestCaseClass::testMethod with data set "my named data"</literal></term>
              <listitem>
                <para>
                  Lorsqu'un test a un fournisseur de données qui utilise des ensembles nommés, chaque
                  itération des données a le nom courant ajouté à la
                  du nom de test par défaut. Voir
                  <xref linkend="textui.examples.TestCaseClass.php" /> pour un
                  exemple de fournisseurs de données avec des ensembles nommés.
                </para>

                <example id="textui.examples.TestCaseClass.php">
                  <title>Ensembles de données nommés</title>
                  <programlisting><![CDATA[<?php
use PHPUnit\Framework\TestCase;

namespace TestNamespace;

class TestCaseClass extends TestCase
{
    /**
     * @dataProvider provider
     */
    public function testMethod($data)
    {
        $this->assertTrue($data);
    }

    public function provider()
    {
        return [
            'my named data' => [true],
            'my data'       => [true]
        ];
    }
}
?>]]></programlisting>
                </example>
              </listitem>
            </varlistentry>

            <varlistentry>
              <term><literal>/path/to/my/test.phpt</literal></term>
              <listitem>
                <para>
                  Le nom du test pour un test PHPT est le chemin du système de fichiers.
                </para>
              </listitem>
            </varlistentry>
          </variablelist>

          <para>
            Voir <xref linkend="textui.examples.filter-patterns" /> pour des exemples
            de motifs de filtre valide.
          </para>

          <example id="textui.examples.filter-patterns">
            <title>Exemples de motif de filtre</title>

            <itemizedlist>
              <listitem><para><literal>--filter 'TestNamespace\\TestCaseClass::testMethod'</literal></para></listitem>
              <listitem><para><literal>--filter 'TestNamespace\\TestCaseClass'</literal></para></listitem>
              <listitem><para><literal>--filter TestNamespace</literal></para></listitem>
              <listitem><para><literal>--filter TestCaseClass</literal></para></listitem>
              <listitem><para><literal>--filter testMethod</literal></para></listitem>
              <listitem><para><literal>--filter '/::testMethod .*"my named data"/'</literal></para></listitem>
              <listitem><para><literal>--filter '/::testMethod .*#5$/'</literal></para></listitem>
              <listitem><para><literal>--filter '/::testMethod .*#(5|6|7)$/'</literal></para></listitem>
            </itemizedlist>
          </example>

          <para>
            Voir <xref linkend="textui.examples.filter-shortcuts" /> pour quelques
            raccourcis supplémentaires disponibles pour faire correspondre
            des fournisseurs de données.
          </para>

          <example id="textui.examples.filter-shortcuts">
            <title>Raccourcis de filtre</title>

            <itemizedlist>
              <listitem><para><literal>--filter 'testMethod#2'</literal></para></listitem>
              <listitem><para><literal>--filter 'testMethod#2-4'</literal></para></listitem>
              <listitem><para><literal>--filter '#2'</literal></para></listitem>
              <listitem><para><literal>--filter '#2-4'</literal></para></listitem>
              <listitem><para><literal>--filter 'testMethod@my named data'</literal></para></listitem>
              <listitem><para><literal>--filter 'testMethod@my.*data'</literal></para></listitem>
              <listitem><para><literal>--filter '@my named data'</literal></para></listitem>
              <listitem><para><literal>--filter '@my.*data'</literal></para></listitem>
            </itemizedlist>
          </example>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--testsuite</literal></term>
        <listitem>
          <para>
            Exécute uniquement la suite de test dont le nom correspond au modèle donné.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Groupes de tests</primary></indexterm>
        <indexterm><primary>Annotation</primary></indexterm>
        <indexterm><primary>@author</primary></indexterm>
        <indexterm><primary>@group</primary></indexterm>
        <term><literal>--group</literal></term>
        <listitem>
          <para>
            Exécute seulement les tests appartenant à un/des groupe(s) indiqué(s). Un test
            peut être signalé comme appartenant à un groupe en utilisant l'annotation <literal>@group</literal>.
          </para>
          <para>
            L'annotation <literal>@author</literal> est un alias pour
            <literal>@group</literal> permettant de filtrer les tests en se basant
            sur leurs auteurs.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Groupes de tests</primary></indexterm>
        <indexterm><primary>Annotation</primary></indexterm>
        <indexterm><primary>@group</primary></indexterm>
        <term><literal>--exclude-group</literal></term>
        <listitem>
          <para>
            Exclut les tests d'un/des groupe(s) indiqué(s). Un test peut être signalé
            comme appartenant à un groupe en utilisant l'annotation <literal>@group</literal>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Groupes de tests</primary></indexterm>
        <indexterm><primary>Annotation</primary></indexterm>
        <indexterm><primary>@group</primary></indexterm>
        <term><literal>--list-groups</literal></term>
        <listitem>
          <para>
            Liste les groupes de tests disponibles.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--test-suffix</literal></term>
        <listitem>
          <para>
            Recherche seulement les fichiers de test avec le(s) suffixe(s) spécifié(s).
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--report-useless-tests</literal></term>
        <listitem>
          <para>
            Être strict sur les tests qui ne testent rien. Voir <xref
            linkend="risky-tests" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--strict-coverage</literal></term>
        <listitem>
          <para>
            Être strict sur le code non-intentionnellemnt couvert. Voir <xref
            linkend="risky-tests" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--strict-global-state</literal></term>
        <listitem>
          <para>
            Être strict sur la manipulation de l'état global. Voir <xref
            linkend="risky-tests" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--disallow-test-output</literal></term>
        <listitem>
          <para>
            Être strict sur les sorties écran pendant les tests. Voir <xref
            linkend="risky-tests" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--disallow-todo-tests</literal></term>
        <listitem>
          <para>
            Ne pas executer les tests qui ont l'annotation <literal>@todo</literal> dans son docblock.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--enforce-time-limit</literal></term>
        <listitem>
          <para>
            Appliquer une limite de temps basée sur la taille du test. Voir <xref
            linkend="risky-tests" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Processus indépendants</primary></indexterm>
        <indexterm><primary>Tests indépendants</primary></indexterm>
        <term><literal>--process-isolation</literal></term>
        <listitem>
          <para>
            Exécute chaque test dans un processus PHP distinct.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Isolation de test</primary></indexterm>
        <term><literal>--no-globals-backup</literal></term>
        <listitem>
          <para>
            Ne pas sauvegarder et restaurer $GLOBALS. Voir <xref linkend="fixtures.global-state" />
            pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Tests indépendants</primary></indexterm>
        <term><literal>--static-backup</literal></term>
        <listitem>
          <para>
            Sauvegarder et restaurer les attributs statiques des classes définies par l'utilisateur.
            Voir <xref linkend="fixtures.global-state" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--colors</literal></term>
        <listitem>
          <para>
            Utiliser des couleurs pour la sortie écran.
            Sur Windows, utiliser <ulink url="https://github.com/adoxa/ansicon">ANSICON</ulink> ou <ulink url="https://github.com/Maximus5/ConEmu">ConEmu</ulink>.
          </para>
          <para>
            Il existe trois valeurs possible pour cette option:
            <itemizedlist>
              <listitem>
                <para>
                  <literal>never</literal> : Ne jamais afficher de couleurs dans la sortie écran. Il s'agit de la valeur par défaut lorsque l'option <literal>--colors</literal> n'est pas utilisée.
                </para>
              </listitem>
              <listitem>
                <para>
                  <literal>auto</literal> : Afficher les couleurs dans la sortie à moins que le terminal actuel ne supporte pas les couleurs,
                  ou si la sortie est envoyée vers une commande ou redirigée vers un fichier.
                </para>
              </listitem>
              <listitem>
                <para>
                  <literal>always</literal> : Toujours affiche les couleurs dans la sortie écran, même lorsque le terminal en cours ne prend pas en charge les couleurs,
                  ou lorsque la sortie est envoyée vers une commande ou redirigée vers un fichier.
                </para>
              </listitem>
            </itemizedlist>
            Lorsque <literal>--colors</literal> est utilisée sans aucune valeur, <literal>auto</literal> est la valeur choisie.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--columns</literal></term>
        <listitem>
          <para>
            Définit le nombre de colonnes à utiliser pour la barre de progression.
            Si la valeur définie est <literal>max</literal>, le nombre de colonnes sera le maximum du terminal courant.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--stderr</literal></term>
        <listitem>
          <para>
            Utilise optionnellement <literal>STDERR</literal> au lieu de
            <literal>STDOUT</literal> pour l'affichage.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--stop-on-error</literal></term>
        <listitem>
          <para>
            Arrête l'execution à la première erreur.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--stop-on-failure</literal></term>
        <listitem>
          <para>
            Arrête l'execution à la première erreur ou au premier échec.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--stop-on-risky</literal></term>
        <listitem>
          <para>
            Arrête l'execution au premier test risqué.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--stop-on-skipped</literal></term>
        <listitem>
          <para>
            Arrête l'execution au premier test sauté.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--stop-on-incomplete</literal></term>
        <listitem>
          <para>
            Arrête l'execution au premier test incomplet.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--verbose</literal></term>
        <listitem>
          <para>
            Affiche des informations plus détaillées, par exemple le nom des tests
            qui sont incomplets ou qui ont été sautés.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--debug</literal></term>
        <listitem>
          <para>
            Affiche des informations de débogage telles que le nom d'un test quand
            son exécution démarre.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>PHPUnit_Runner_TestSuiteLoader</primary></indexterm>
        <term><literal>--loader</literal></term>
        <listitem>
          <para>
            Indique l'implémentation de <literal>PHPUnit_Runner_TestSuiteLoader</literal>
            à utiliser.
          </para>

          <para>
            Le chargeur standard de suite de tests va chercher les fichiers source
            dans le répertoire de travail actuel et dans chaque répertoire qui
            est indiqué dans la directive de configuration PHP <literal>include_path</literal>.
            Le nom d'une classe tel que <literal>Projet_Paquetage_Classe</literal> est
            calqué sur le nom de fichier source
            <filename>Projet/Paquetage/Classe.php</filename>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--repeat</literal></term>
        <listitem>
          <para>
            Répéter l'exécution du(des) test(s) le nombre indiqué de fois.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Documentation agile</primary></indexterm>
        <term><literal>--testdox</literal></term>
        <listitem>
          <para>
            Rapporte l'avancement des tests sous forme de documentation agile. Voir
            <xref linkend="other-uses-for-tests" /> pour plus de détails.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>PHPUnit_Framework_TestListener</primary></indexterm>
        <indexterm><primary>PHPUnit_Util_Printer</primary></indexterm>
        <term><literal>--printer</literal></term>
        <listitem>
          <para>
            Indique l'afficheur de résultats à utiliser. Cette classe d'afficheur doit
            hériter de <literal>PHPUnit_Util_Printer</literal> et implémenter l'interface
            <literal>PHPUnit_Framework_TestListener</literal>.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>--bootstrap</literal></term>
        <listitem>
          <para>
            Un fichier PHP "amorce" ("bootstrap") est exécuté avant les tests.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Configuration</primary></indexterm>
        <term><literal>--configuration</literal></term>
        <term><literal>-c</literal></term>
        <listitem>
          <para>
            Lit la configuration dans un fichier XML.
            Voir <xref linkend="appendixes.configuration" /> pour plus de détails.
          </para>
          <para>
            Si <filename>phpunit.xml</filename> ou
            <filename>phpunit.xml.dist</filename> (dans cet ordre) existent dans le
            répertoire de travail actuel et que <literal>--configuration</literal> n'est
            <emphasis>pas</emphasis> utilisé, la configuration sera automatiquement
            lue dans ce fichier.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary>Configuration</primary></indexterm>
        <term><literal>--no-configuration</literal></term>
        <listitem>
          <para>
            Ignore <filename>phpunit.xml</filename> et
            <filename>phpunit.xml.dist</filename> du répertoire de travail
            actuel.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <indexterm><primary><literal>include_path</literal></primary></indexterm>
        <term><literal>--include-path</literal></term>
        <listitem>
          <para>
            Préfixe l'<literal>include_path</literal> PHP avec le(s) chemin(s) donné(s).
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><literal>-d</literal></term>
        <listitem>
          <para>
            Fixe la valeur des options de configuration PHP données.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>

    <note>
      <para>
        Notez qu'à partir de 4.8, les options peuvent être placées après le(s) argument(s).
      </para>
    </note>
  </section>
</chapter>
