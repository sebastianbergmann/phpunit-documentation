<?xml version="1.0" encoding="utf-8" ?>

<chapter id="logging">
  <title>ログ出力</title>

  <para>
    <indexterm><primary>Logging</primary></indexterm>

    PHPUnit は、いくつかの形式のログファイルを作成することができます。
  </para>

  <section id="logging.xml">
    <title>テスト結果 (XML)</title>

    <para>
      PHPUnit が作成するテスト結果の XML のログファイルは、
      <ulink url="http://ant.apache.org/manual/Tasks/junit.html">
      Apache Ant の JUnit タスク</ulink>
      が使用しているものを参考にしています。
      以下の例は、<literal>ArrayTest</literal> のテストが生成した
      XML ログファイルです。
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ArrayTest"
             file="/home/sb/ArrayTest.php"
             tests="2"
             assertions="2"
             failures="0"
             errors="0"
             time="0.016030">
    <testcase name="testNewArrayIsEmpty"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="6"
              assertions="1"
              time="0.008044"/>
    <testcase name="testArrayContainsAnElement"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="15"
              assertions="1"
              time="0.007986"/>
  </testsuite>
</testsuites>]]></screen>

    <para>
      次の XML ログファイルは、テストクラス
      <literal>FailureErrorTest</literal> にある 2 つのテスト
      <literal>testFailure</literal> および <literal>testError</literal>
      が出力したものです。失敗やエラーがどのように表示されるのかを確認しましょう。
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="FailureErrorTest"
             file="/home/sb/FailureErrorTest.php"
             tests="2"
             assertions="1"
             failures="1"
             errors="1"
             time="0.019744">
    <testcase name="testFailure"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="6"
              assertions="1"
              time="0.011456">
      <failure type="PHPUnit_Framework_ExpectationFailedException">
testFailure(FailureErrorTest)
Failed asserting that &lt;integer:2&gt; matches expected value &lt;integer:1&gt;.

/home/sb/FailureErrorTest.php:8
</failure>
    </testcase>
    <testcase name="testError"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="11"
              assertions="0"
              time="0.008288">
      <error type="Exception">testError(FailureErrorTest)
Exception:

/home/sb/FailureErrorTest.php:13
</error>
    </testcase>
  </testsuite>
</testsuites>]]></screen>
  </section>

  <section id="logging.tap">
    <title>テスト結果 (TAP)</title>

    <para>
      <ulink url="http://testanything.org/">Test Anything Protocol (TAP)</ulink>
      は、Perl のモジュールをテストする際に使用する、
      シンプルなテキストベースのインターフェイスです。
      以下の例は、<literal>ArrayTest</literal> のテストが生成した
      TAP ログファイルです。
    </para>

    <screen>TAP version 13
ok 1 - testNewArrayIsEmpty(ArrayTest)
ok 2 - testArrayContainsAnElement(ArrayTest)
1..2</screen>

    <para>
      次の TAP ログファイルは、テストクラス
      <literal>FailureErrorTest</literal> にあるメソッド
      <literal>testFailure</literal> および <literal>testError</literal>
      が出力したものです。失敗やエラーがどのように表示されるのかを確認しましょう。
    </para>

    <screen><![CDATA[TAP version 13
not ok 1 - Failure: testFailure(FailureErrorTest)
  ---
  message: 'Failed asserting that <integer:2> matches expected value <integer:1>.'
  severity: fail
  data:
    got: 2
    expected: 1
  ...
not ok 2 - Error: testError(FailureErrorTest)
1..2]]></screen>
  </section>

  <section id="logging.json">
    <title>テスト結果 (JSON)</title>

    <para>
      <ulink url="http://www.json.org/">JavaScript Object Notation (JSON)</ulink>
      は、軽量なデータ交換用フォーマットです。次の例は、
      <literal>ArrayTest</literal> のテストが作成した JSON メッセージです。
    </para>

    <screen>{"event":"suiteStart","suite":"ArrayTest","tests":2}
{"event":"test","suite":"ArrayTest",
 "test":"testNewArrayIsEmpty(ArrayTest)","status":"pass",
 "time":0.000460147858,"trace":[],"message":""}
{"event":"test","suite":"ArrayTest",
 "test":"testArrayContainsAnElement(ArrayTest)","status":"pass",
 "time":0.000422954559,"trace":[],"message":""}</screen>

    <para>
      次の JSON メッセージは、
      <literal>FailureErrorTest</literal> にある 2 つのテスト
      <literal>testFailure</literal> および <literal>testError</literal>
      が出力したものです。失敗やエラーがどのように表示されるのかを確認しましょう。
    </para>

    <screen><![CDATA[{"event":"suiteStart","suite":"FailureErrorTest","tests":2}
{"event":"test","suite":"FailureErrorTest",
 "test":"testFailure(FailureErrorTest)","status":"fail",
 "time":0.0082459449768066,"trace":[],
 "message":"Failed asserting that <integer:2> is equal to <integer:1>."}
{"event":"test","suite":"FailureErrorTest",
 "test":"testError(FailureErrorTest)","status":"error",
 "time":0.0083680152893066,"trace":[],"message":""}]]></screen>
  </section>

  <section id="logging.codecoverage.xml">
    <title>コードカバレッジ (XML)</title>

    <para>
      PHPUnit がコードカバレッジ情報のログ出力の際に使用している XML のフォーマットは、
      <ulink url="http://www.atlassian.com/software/clover/">Clover</ulink>
      のものを参考にしています。
      以下の例は、<literal>BankAccountTest</literal> のテストが生成した
      XML ログファイルです。
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1184835473" phpunit="3.6.0">
  <project name="BankAccountTest" timestamp="1184835473">
    <file name="/home/sb/BankAccount.php">
      <class name="BankAccountException">
        <metrics methods="0" coveredmethods="0" statements="0"
                 coveredstatements="0" elements="0" coveredelements="0"/>
      </class>
      <class name="BankAccount">
        <metrics methods="4" coveredmethods="4" statements="13"
                 coveredstatements="5" elements="17" coveredelements="9"/>
      </class>
      <line num="77" type="method" count="3"/>
      <line num="79" type="stmt" count="3"/>
      <line num="89" type="method" count="2"/>
      <line num="91" type="stmt" count="2"/>
      <line num="92" type="stmt" count="0"/>
      <line num="93" type="stmt" count="0"/>
      <line num="94" type="stmt" count="2"/>
      <line num="96" type="stmt" count="0"/>
      <line num="105" type="method" count="1"/>
      <line num="107" type="stmt" count="1"/>
      <line num="109" type="stmt" count="0"/>
      <line num="119" type="method" count="1"/>
      <line num="121" type="stmt" count="1"/>
      <line num="123" type="stmt" count="0"/>
      <metrics loc="126" ncloc="37" classes="2" methods="4" coveredmethods="4"
               statements="13" coveredstatements="5" elements="17"
               coveredelements="9"/>
    </file>
    <metrics files="1" loc="126" ncloc="37" classes="2" methods="4"
             coveredmethods="4" statements="13" coveredstatements="5"
             elements="17" coveredelements="9"/>
  </project>
</coverage>]]></screen>
  </section>

  <section id="logging.codecoverage.text">
    <title>コードカバレッジ (テキスト)</title>

    <para>
      人間が読める形式のコードカバレッジ情報を、コマンドラインあるいはテキストファイルに出力します。

      この出力フォーマットの狙いは、ちょっとしたクラス群のカバレッジの概要を手軽に把握することです。
      大規模なプロジェクトでは、このフォーマットを使えばプロジェクト全体のカバレッジを大まかに把握しやすくなるでしょう。
      <literal>--filter</literal> と組み合わせて使うこともできます。

      コマンドラインから使う場合は <literal>php://stdout</literal> に書き込みます。
      この出力は <literal>--colors</literal> の設定を反映したものになります。

      コマンドラインから使った場合は、デフォルトの出力先は標準出力となります。

      デフォルトでは、テストで少なくとも一行はカバーしているファイルしか表示しません。
      この設定は、xml の <literal>showUncoveredFiles</literal> オプションでしか変更できません。
      <xref linkend="appendixes.configuration.logging"/> を参照ください。

      デフォルトでは、すべてのファイルとそのカバレッジ情報が、詳細形式で表示されます。
      この設定は、xml のオプション <literal>showOnlySummary</literal> で変更できます。
    </para>

    </section>
</chapter>
