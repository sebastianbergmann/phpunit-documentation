<?xml version="1.0" encoding="utf-8" ?>

<chapter id="installation">
  <title>Installing PHPUnit</title>

  <section id="installation.phar">
    <title>PHP Archive (PHAR)</title>

    <para>
      The easiest way to obtain PHPUnit is to download a <ulink
      url="http://php.net/phar">PHP Archive (PHAR)</ulink> that has all required
      (as well as some optional) dependencies of PHPUnit bundled in a single
      file:
    </para>

    <screen><userinput>wget http://pear.phpunit.de/get/phpunit.phar</userinput>
<userinput>chmod +x phpunit.phar</userinput>
<userinput>mv phpunit.phar /usr/local/bin/phpunit</userinput></screen>

    <para>
      You can also immediately use the PHAR after you have downloaded it, of
      course:
    </para>

    <screen><userinput>wget http://pear.phpunit.de/get/phpunit.phar</userinput>
<userinput>php phpunit.phar</userinput></screen>
  </section>

  <section id="installation.composer">
    <title>Composer</title>

    <para>
      Simply add a dependency on <literal>phpunit/phpunit</literal> to your
      project's <literal>composer.json</literal> file if you use
      <ulink url="http://getcomposer.org/">Composer</ulink> to manage the
      dependencies of your project. Here is a minimal example of a
      <literal>composer.json</literal> file that just defines a development-time
      dependency on PHPUnit 3.8:
    </para>

    <programlisting><![CDATA[{
    "require-dev": {
        "phpunit/phpunit": "3.8.*"
    }
}]]></programlisting>

    <para>
      For a system-wide installation via Composer, you can run:
    </para>

    <screen><userinput>composer global require 'phpunit/phpunit=3.8.*'</userinput></screen>

    <para>
      Make sure you have <literal>~/.composer/vendor/bin/</literal> in your PATH.
    </para>

    <note>
      <para>
        Support for Composer and PHP Archive (PHAR) was added in PHPUnit 3.7
        (and is known to be stable since PHPUnit 3.7.5). Earlier releases of
        PHPUnit are not available through these distribution channels.
      </para>
    </note>
  </section>

  <section id="installation.pear">
    <title>PEAR</title>

    <para>
      The following two commands (which you may have to run as
      <literal>root</literal>) are all that is required to install PHPUnit using
      the <ulink url="http://pear.php.net/manual/en/guide.users.commandline.cli.php">PEAR Installer</ulink>:
    </para>

    <screen><userinput>pear config-set auto_discover 1</userinput>
<userinput>pear install pear.phpunit.de/PHPUnit</userinput></screen>

    <caution>
      <para>
        Depending on your OS distribution and/or your PHP environment, you may
        need to install PEAR or update your existing PEAR installation before
        you can proceed with the instructions in this section.
      </para>

      <para>
        <userinput>sudo pear upgrade PEAR</userinput> usually suffices to
        upgrade an existing PEAR installation. The <ulink
        url="http://pear.php.net/manual/en/installation.getting.php">PEAR Manual</ulink>
        explains how to perform a fresh installation of PEAR.
      </para>
    </caution>

    <note>
      <para>
        PHPUnit 3.8 requires PHP 5.4.7 (or later) but PHP 5.5.1 (or later) is
        highly recommended.
      </para>

      <para>
        PHP_CodeCoverage, the library that is used by PHPUnit to collect and
        process code coverage information, depends on Xdebug 2.2.3 (or later)
        but Xdebug 2.3.0 (or later) is highly recommended.
      </para>
    </note>
  </section>

  <section id="installation.optional-packages">
    <title>Optional packages</title>

    <para>
      The following optional packages are available:
    </para>

    <variablelist>
      <varlistentry>
        <term>
          <literal>DbUnit</literal>
        </term>
        <listitem>
          <para>
            DbUnit port for PHP/PHPUnit to support database interaction testing.
          </para>

          <para>
            This package can be installed via PEAR using the following command:
          </para>

          <screen><userinput>pear install phpunit/DbUnit</userinput></screen>

          <para>
            This package can be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/dbunit": ">=1.2"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHP_Invoker</literal>
        </term>
        <listitem>
          <para>
            A utility class for invoking callables with a timeout. This package is
            required to enforce test timeouts in strict mode.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHP_Invoker</userinput></screen>

          <para>
            This package can be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/php-invoker": "*"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_Selenium</literal>
        </term>
        <listitem>
          <para>
            Selenium RC integration for PHPUnit.
          </para>

          <para>
            This package can be installed via PEAR using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_Selenium</userinput></screen>

          <para>
            This package can be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/phpunit-selenium": ">=1.2"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_Story</literal>
        </term>
        <listitem>
          <para>
            Story-based test runner for Behavior-Driven Development with PHPUnit.
          </para>

          <para>
            This package can be installed via PEAR using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_Story</userinput></screen>

          <para>
            This package can be installed via Composer by adding the following
            <literal>"require-dev"</literal> dependency:
          </para>

          <screen><userinput>"phpunit/phpunit-story": "*"</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_SkeletonGenerator</literal>
        </term>
        <listitem>
          <para>
            Tool that can generate skeleton test classes from production code
            classes and vice versa.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_SkeletonGenerator</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_TestListener_DBUS</literal>
        </term>
        <listitem>
          <para>
            A TestListener that sends events to DBUS.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_TestListener_DBUS</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_TestListener_XHProf</literal>
        </term>
        <listitem>
          <para>
            A TestListener that uses XHProf for automated profiling of the tested code.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_TestListener_XHProf</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_TicketListener_Fogbugz</literal>
        </term>
        <listitem>
          <para>
            A ticket listener that interacts with the Fogbugz issue API.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_TicketListener_Fogbugz</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_TicketListener_GitHub</literal>
        </term>
        <listitem>
          <para>
            A ticket listener that interacts with the GitHub issue API.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_TicketListener_GitHub</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_TicketListener_GoogleCode</literal>
        </term>
        <listitem>
          <para>
            A ticket listener that interacts with the Google Code issue API.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_TicketListener_GoogleCode</userinput></screen>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <literal>PHPUnit_TicketListener_Trac</literal>
        </term>
        <listitem>
          <para>
            A ticket listener that interacts with the Trac issue API.
          </para>

          <para>
            This package can be installed using the following command:
          </para>

          <screen><userinput>pear install phpunit/PHPUnit_TicketListener_Trac</userinput></screen>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section id="installing.upgrading">
    <title>Upgrading</title>

    <para>
      This section serves as a collection of minor BC issues that one might
      run into when upgrading from PHPUnit 3.7 to PHPUnit 3.8.
    </para>

    <para>
      The upgrade should be rather easy and work without any issues as it was
      tested against all major Open Source frameworks and there was not a
      single problem for them. Still every project is different and if you
      did not get around to trying one of the release candidates and have ran
      into an issue this document might provide some help.
    </para>
  </section>
</chapter>
