<?xml version="1.0" encoding="utf-8" ?>

<appendix id="appendixes.assertions">
  <title>Assertions</title>

  <para>
    <xref linkend="appendixes.assertions.tables.assertions" /> shows all the
    varieties of assertions.
  </para>

  <table id="appendixes.assertions.tables.assertions">
    <title>Assertions</title>

    <tgroup cols="1" align="left" colsep="1" rowsep="1">
      <thead>
        <row>
          <entry>Assertion</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <indexterm><primary>assertArrayHasKey()</primary></indexterm>
          <entry><literal>assertArrayHasKey($key, $array, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertArrayNotHasKey()</primary></indexterm>
          <entry><literal>assertArrayNotHasKey($key, $array, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeContains()</primary></indexterm>
          <entry><literal>assertAttributeContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeContainsOnly()</primary></indexterm>
          <entry><literal>assertAttributeContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeCount()</primary></indexterm>
          <entry><literal>assertAttributeCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeEmpty()</primary></indexterm>
          <entry><literal>assertAttributeEmpty($haystackAttributeName, $haystackClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeEquals()</primary></indexterm>
          <entry><literal>assertAttributeEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeGreaterThan()</primary></indexterm>
          <entry><literal>assertAttributeGreaterThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeGreaterThanOrEqual()</primary></indexterm>
          <entry><literal>assertAttributeGreaterThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeInstanceOf()</primary></indexterm>
          <entry><literal>assertAttributeInstanceOf($expected, $attributeName, $classOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeInternalType()</primary></indexterm>
          <entry><literal>assertAttributeInternalType($expected, $attributeName, $classOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeLessThan()</primary></indexterm>
          <entry><literal>assertAttributeLessThan($expected, $actualAttributeName, $actualClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeLessThanOrEqual()</primary></indexterm>
          <entry><literal>assertAttributeLessThanOrEqual($expected, $actualAttributeName, $actualClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotContains()</primary></indexterm>
          <entry><literal>assertAttributeNotContains($needle, $haystackAttributeName, $haystackClassOrObject, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotContainsOnly()</primary></indexterm>
          <entry><literal>assertAttributeNotContainsOnly($type, $haystackAttributeName, $haystackClassOrObject, $isNativeType = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotCount()</primary></indexterm>
          <entry><literal>assertAttributeNotCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotEmpty()</primary></indexterm>
          <entry><literal>assertAttributeNotEmpty($haystackAttributeName, $haystackClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotEquals()</primary></indexterm>
          <entry><literal>assertAttributeNotEquals($expected, $actualAttributeName, $actualClassOrObject, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotInstanceOf()</primary></indexterm>
          <entry><literal>assertAttributeNotInstanceOf($expected, $attributeName, $classOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotInternalType()</primary></indexterm>
          <entry><literal>assertAttributeNotInternalType($expected, $attributeName, $classOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotSame()</primary></indexterm>
          <entry><literal>assertAttributeNotSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeSame()</primary></indexterm>
          <entry><literal>assertAttributeSame($expected, $actualAttributeName, $actualClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassHasAttribute()</primary></indexterm>
          <entry><literal>assertClassHasAttribute($attributeName, $className, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassHasStaticAttribute()</primary></indexterm>
          <entry><literal>assertClassHasStaticAttribute($attributeName, $className, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassNotHasAttribute()</primary></indexterm>
          <entry><literal>assertClassNotHasAttribute($attributeName, $className, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassNotHasStaticAttribute()</primary></indexterm>
          <entry><literal>assertClassNotHasStaticAttribute($attributeName, $className, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContains()</primary></indexterm>
          <entry><literal>assertContains($needle, $haystack, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContainsOnly()</primary></indexterm>
          <entry><literal>assertContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContainsOnlyInstancesOf()</primary></indexterm>
          <entry><literal>assertContainsOnlyInstancesOf($classname, $haystack, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertCount()</primary></indexterm>
          <entry><literal>assertCount($expectedCount, $haystack, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEmpty()</primary></indexterm>
          <entry><literal>assertEmpty($actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEqualXMLStructure()</primary></indexterm>
          <entry><literal>assertEqualXMLStructure(DOMElement $expectedElement, DOMElement $actualElement, $checkAttributes = FALSE, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEquals()</primary></indexterm>
          <entry><literal>assertEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFalse()</primary></indexterm>
          <entry><literal>assertFalse($condition, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileEquals()</primary></indexterm>
          <entry><literal>assertFileEquals($expected, $actual, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileExists()</primary></indexterm>
          <entry><literal>assertFileExists($filename, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileNotEquals()</primary></indexterm>
          <entry><literal>assertFileNotEquals($expected, $actual, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileNotExists()</primary></indexterm>
          <entry><literal>assertFileNotExists($filename, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertGreaterThan()</primary></indexterm>
          <entry><literal>assertGreaterThan($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertGreaterThanOrEqual()</primary></indexterm>
          <entry><literal>assertGreaterThanOrEqual($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertInstanceOf()</primary></indexterm>
          <entry><literal>assertInstanceOf($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertInternalType()</primary></indexterm>
          <entry><literal>assertInternalType($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonFileEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonFileEqualsJsonFile($expectedFile, $actualFile, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonFileNotEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonFileNotEqualsJsonFile($expectedFile, $actualFile, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonStringEqualsJsonFile($expectedFile, $actualJson, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringEqualsJsonString()</primary></indexterm>
          <entry><literal>assertJsonStringEqualsJsonString($expectedJson, $actualJson, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringNotEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonStringNotEqualsJsonFile($expectedFile, $actualJson, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringNotEqualsJsonString()</primary></indexterm>
          <entry><literal>assertJsonStringNotEqualsJsonString($expectedJson, $actualJson, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertLessThan()</primary></indexterm>
          <entry><literal>assertLessThan($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertLessThanOrEqual()</primary></indexterm>
          <entry><literal>assertLessThanOrEqual($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotContains()</primary></indexterm>
          <entry><literal>assertNotContains($needle, $haystack, $message = '', $ignoreCase = FALSE, $checkForObjectIdentity = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotContainsOnly()</primary></indexterm>
          <entry><literal>assertNotContainsOnly($type, $haystack, $isNativeType = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotCount()</primary></indexterm>
          <entry><literal>assertNotCount($expectedCount, $haystack, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotEmpty()</primary></indexterm>
          <entry><literal>assertNotEmpty($actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotEquals()</primary></indexterm>
          <entry><literal>assertNotEquals($expected, $actual, $message = '', $delta = 0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotInstanceOf()</primary></indexterm>
          <entry><literal>assertNotInstanceOf($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotInternalType()</primary></indexterm>
          <entry><literal>assertNotInternalType($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotNull()</primary></indexterm>
          <entry><literal>assertNotNull($actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotRegExp()</primary></indexterm>
          <entry><literal>assertNotRegExp($pattern, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotSame()</primary></indexterm>
          <entry><literal>assertNotSame($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotSameSize()</primary></indexterm>
          <entry><literal>assertNotSameSize($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotTag()</primary></indexterm>
          <entry><literal>assertNotTag($matcher, $actual, $message = '', $isHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNull()</primary></indexterm>
          <entry><literal>assertNull($actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertObjectHasAttribute()</primary></indexterm>
          <entry><literal>assertObjectHasAttribute($attributeName, $object, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertObjectNotHasAttribute()</primary></indexterm>
          <entry><literal>assertObjectNotHasAttribute($attributeName, $object, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertRegExp()</primary></indexterm>
          <entry><literal>assertRegExp($pattern, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSame()</primary></indexterm>
          <entry><literal>assertSame($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSameSize()</primary></indexterm>
          <entry><literal>assertSameSize($expected, $actual, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectCount()</primary></indexterm>
          <entry><literal>assertSelectCount($selector, $count, $actual, $message = '', $isHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectEquals()</primary></indexterm>
          <entry><literal>assertSelectEquals($selector, $content, $count, $actual, $message = '', $isHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectRegExp()</primary></indexterm>
          <entry><literal>assertSelectRegExp($selector, $pattern, $count, $actual, $message = '', $isHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEndsNotWith()</primary></indexterm>
          <entry><literal>assertStringEndsNotWith($suffix, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEndsWith()</primary></indexterm>
          <entry><literal>assertStringEndsWith($suffix, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEqualsFile()</primary></indexterm>
          <entry><literal>assertStringEqualsFile($expectedFile, $actualString, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringMatchesFormat()</primary></indexterm>
          <entry><literal>assertStringMatchesFormat($format, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringMatchesFormatFile()</primary></indexterm>
          <entry><literal>assertStringMatchesFormatFile($formatFile, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotEqualsFile()</primary></indexterm>
          <entry><literal>assertStringNotEqualsFile($expectedFile, $actualString, $message = '', $canonicalize = FALSE, $ignoreCase = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotMatchesFormat()</primary></indexterm>
          <entry><literal>assertStringNotMatchesFormat($format, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotMatchesFormatFile()</primary></indexterm>
          <entry><literal>assertStringNotMatchesFormatFile($formatFile, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringStartsNotWith()</primary></indexterm>
          <entry><literal>assertStringStartsNotWith($prefix, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringStartsWith()</primary></indexterm>
          <entry><literal>assertStringStartsWith($prefix, $string, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertTag()</primary></indexterm>
          <entry><literal>assertTag($matcher, $actual, $message = '', $isHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertThat()</primary></indexterm>
          <entry><literal>assertThat($value, PHPUnit_Framework_Constraint $constraint, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertTrue()</primary></indexterm>
          <entry><literal>assertTrue($condition, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlFileEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlFileEqualsXmlFile($expectedFile, $actualFile, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlFileNotEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlFileNotEqualsXmlFile($expectedFile, $actualFile, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlStringEqualsXmlFile($expectedFile, $actualXml, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringEqualsXmlString()</primary></indexterm>
          <entry><literal>assertXmlStringEqualsXmlString($expectedXml, $actualXml, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringNotEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlStringNotEqualsXmlFile($expectedFile, $actualXml, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringNotEqualsXmlString()</primary></indexterm>
          <entry><literal>assertXmlStringNotEqualsXmlString($expectedXml, $actualXml, $message = '')</literal></entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</appendix>
