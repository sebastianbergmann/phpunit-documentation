<?xml version="1.0" encoding="utf-8" ?>

<appendix id="appendixes.assertions">
  <title>Assertions</title>

  <para>
	<xref linkend="appendixes.assertions.tables.assertions" /> montre toutes les 
	variétés d'assertions.
  </para>

  <table id="appendixes.assertions.tables.assertions">
    <title>Assertions</title>

    <tgroup cols="1" align="left" colsep="1" rowsep="1">
      <thead>
        <row>
          <entry>Assertion</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <indexterm><primary>assertArrayHasKey()</primary></indexterm>
          <entry><literal>assertArrayHasKey($clef, $tableau, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertArrayNotHasKey()</primary></indexterm>
          <entry><literal>assertArrayNotHasKey($clef, $tableau, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeContains()</primary></indexterm>
          <entry><literal>assertAttributeContains($aiguille, $nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $message = '', $ignoreCasse = FALSE, $controleIdentiteDesObjets = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeContainsOnly()</primary></indexterm>
          <entry><literal>assertAttributeContainsOnly($type, $nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $estTypeNatif = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeCount()</primary></indexterm>
          <entry><literal>assertAttributeCount($expectedCount, $haystackAttributeName, $haystackClassOrObject, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeEmpty()</primary></indexterm>
          <entry><literal>assertAttributeEmpty($nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeEquals()</primary></indexterm>
          <entry><literal>assertAttributeEquals($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '', $delta = 0, $profondeurMax = 10, $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeGreaterThan()</primary></indexterm>
          <entry><literal>assertAttributeGreaterThan($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeGreaterThanOrEqual()</primary></indexterm>
          <entry><literal>assertAttributeGreaterThanOrEqual($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeInstanceOf()</primary></indexterm>
          <entry><literal>assertAttributeInstanceOf($attendu, $nomAttribut, $classeOuObjet, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeInternalType()</primary></indexterm>
          <entry><literal>assertAttributeInternalType($attendu, $nomAttribut, $classeOuObjet, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeLessThan()</primary></indexterm>
          <entry><literal>assertAttributeLessThan($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeLessThanOrEqual()</primary></indexterm>
          <entry><literal>assertAttributeLessThanOrEqual($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotContains()</primary></indexterm>
          <entry><literal>assertAttributeNotContains($aiguille, $nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $message = '', $ignoreCasse = FALSE, $verifierIdenditeDesObjets = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotContainsOnly()</primary></indexterm>
          <entry><literal>assertAttributeNotContainsOnly($type, $nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $estTypeNatif = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotCount()</primary></indexterm>
          <entry><literal>assertAttributeNotCount($nombreAttendu, $nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotEmpty()</primary></indexterm>
          <entry><literal>assertAttributeNotEmpty($nomAttributMeuleDeFoin, $classeOuObjetMeuleDeFoin, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotEquals()</primary></indexterm>
          <entry><literal>assertAttributeNotEquals($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '', $delta = 0, $profondeurMax = 10, $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotInstanceOf()</primary></indexterm>
          <entry><literal>assertAttributeNotInstanceOf($attendu, $nomAttribut, $classeOuObjet, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotInternalType()</primary></indexterm>
          <entry><literal>assertAttributeNotInternalType($attendu, $nomAttribut, $classeOuObjet, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeNotSame()</primary></indexterm>
          <entry><literal>assertAttributeNotSame($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertAttributeSame()</primary></indexterm>
          <entry><literal>assertAttributeSame($attendu, $nomAttributConstate, $classeOuObjetConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassHasAttribute()</primary></indexterm>
          <entry><literal>assertClassHasAttribute($nomAttribut, $nomClasse, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassHasStaticAttribute()</primary></indexterm>
          <entry><literal>assertClassHasStaticAttribute($nomAttribut, $nomClasse, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassNotHasAttribute()</primary></indexterm>
          <entry><literal>assertClassNotHasAttribute($nomAttribut, $nomClasse, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertClassNotHasStaticAttribute()</primary></indexterm>
          <entry><literal>assertClassNotHasStaticAttribute($nomAttribut, $nomClasse, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContains()</primary></indexterm>
          <entry><literal>assertContains($aiguille, $meuleDeFoin, $message = '', $ignoreCasse = FALSE, $verifierIdenditeDesObjets = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContainsOnly()</primary></indexterm>
          <entry><literal>assertContainsOnly($type, $meuleDeFoin, $estTypeNatif = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertContainsOnlyInstancesOf()</primary></indexterm>
          <entry><literal>assertContainsOnlyInstancesOf($nomClasse, $meuleDeFoin, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertCount()</primary></indexterm>
          <entry><literal>assertCount($nombreAttendu, $meuleDeFoin, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEmpty()</primary></indexterm>
          <entry><literal>assertEmpty($constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEqualXMLStructure()</primary></indexterm>
          <entry><literal>assertEqualXMLStructure(DOMElement $elementAttendu, DOMElement $elementConstate, $controlerAttributs = FALSE, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertEquals()</primary></indexterm>
          <entry><literal>assertEquals($attendu, $constate, $message = '', $delta = 0, $profondeurMax = 10, $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFalse()</primary></indexterm>
          <entry><literal>assertFalse($condition, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileEquals()</primary></indexterm>
          <entry><literal>assertFileEquals($attendu, $constate, $message = '', $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileExists()</primary></indexterm>
          <entry><literal>assertFileExists($nomFichier, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileNotEquals()</primary></indexterm>
          <entry><literal>assertFileNotEquals($attendu, $constate, $message = '', $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertFileNotExists()</primary></indexterm>
          <entry><literal>assertFileNotExists($nomFichier, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertGreaterThan()</primary></indexterm>
          <entry><literal>assertGreaterThan($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertGreaterThanOrEqual()</primary></indexterm>
          <entry><literal>assertGreaterThanOrEqual($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertInstanceOf()</primary></indexterm>
          <entry><literal>assertInstanceOf($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertInternalType()</primary></indexterm>
          <entry><literal>assertInternalType($attendu, $constate, $message = '')</literal></entry>
        </row>
		<row>
          <indexterm><primary>assertJsonFileEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonFileEqualsJsonFile($fichierAttendu, $fichierConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonFileNotEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonFileNotEqualsJsonFile($fichierAttendu, $fichierConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonStringEqualsJsonFile($fichierAttendu, $jsonConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringEqualsJsonString()</primary></indexterm>
          <entry><literal>assertJsonStringEqualsJsonString($jsonAttendu, $jsonConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringNotEqualsJsonFile()</primary></indexterm>
          <entry><literal>assertJsonStringNotEqualsJsonFile($fichierAttendu, $jsonConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertJsonStringNotEqualsJsonString()</primary></indexterm>
          <entry><literal>assertJsonStringNotEqualsJsonString($jsonAttendu, $jsonConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertLessThan()</primary></indexterm>
          <entry><literal>assertLessThan($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertLessThanOrEqual()</primary></indexterm>
          <entry><literal>assertLessThanOrEqual($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotContains()</primary></indexterm>
          <entry><literal>assertNotContains($aiguille, $meuleDeFoin, $message = '', $ignoreCasse = FALSE, $verifierIdenditeDesObjets = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotContainsOnly()</primary></indexterm>
          <entry><literal>assertNotContainsOnly($type, $meuleDeFoin, $estTypeNatif = NULL, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotCount()</primary></indexterm>
          <entry><literal>assertNotCount($nombreAttendu, $meuleDeFoin, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotEmpty()</primary></indexterm>
          <entry><literal>assertNotEmpty($constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotEquals()</primary></indexterm>
          <entry><literal>assertNotEquals($attendu, $constate, $message = '', $delta = 0, $profondeurMax = 10, $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotInstanceOf()</primary></indexterm>
          <entry><literal>assertNotInstanceOf($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotInternalType()</primary></indexterm>
          <entry><literal>assertNotInternalType($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotNull()</primary></indexterm>
          <entry><literal>assertNotNull($constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotRegExp()</primary></indexterm>
          <entry><literal>assertNotRegExp($motif, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotSame()</primary></indexterm>
          <entry><literal>assertNotSame($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotSameSize()</primary></indexterm>
          <entry><literal>assertNotSameSize($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNotTag()</primary></indexterm>
          <entry><literal>assertNotTag($matcher, $constate, $message = '', $estHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertNull()</primary></indexterm>
          <entry><literal>assertNull($constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertObjectHasAttribute()</primary></indexterm>
          <entry><literal>assertObjectHasAttribute($nomAttribut, $object, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertObjectNotHasAttribute()</primary></indexterm>
          <entry><literal>assertObjectNotHasAttribute($nomAttribut, $object, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertRegExp()</primary></indexterm>
          <entry><literal>assertRegExp($motif, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSame()</primary></indexterm>
          <entry><literal>assertSame($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSameSize()</primary></indexterm>
          <entry><literal>assertSameSize($attendu, $constate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectCount()</primary></indexterm>
          <entry><literal>assertSelectCount($selecteur, $nombre, $constate, $message = '', $estHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectEquals()</primary></indexterm>
          <entry><literal>assertSelectEquals($selecteur, $contenu, $nombre, $constate, $message = '', $estHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertSelectRegExp()</primary></indexterm>
          <entry><literal>assertSelectRegExp($selecteur, $motif, $nombre, $constate, $message = '', $estHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEndsNotWith()</primary></indexterm>
          <entry><literal>assertStringEndsNotWith($suffixe, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEndsWith()</primary></indexterm>
          <entry><literal>assertStringEndsWith($suffixe, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringEqualsFile()</primary></indexterm>
          <entry><literal>assertStringEqualsFile($fichierAttendu, $chaineConstatee, $message = '', $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringMatchesFormat()</primary></indexterm>
          <entry><literal>assertStringMatchesFormat($format, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringMatchesFormatFile()</primary></indexterm>
          <entry><literal>assertStringMatchesFormatFile($fichierFormat, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotEqualsFile()</primary></indexterm>
          <entry><literal>assertStringNotEqualsFile($fichierAttendu, $chaineConstatee, $message = '', $canoniser = FALSE, $ignoreCasse = FALSE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotMatchesFormat()</primary></indexterm>
          <entry><literal>assertStringNotMatchesFormat($format, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringNotMatchesFormatFile()</primary></indexterm>
          <entry><literal>assertStringNotMatchesFormatFile($fichierFormat, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringStartsNotWith()</primary></indexterm>
          <entry><literal>assertStringStartsNotWith($prefixe, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertStringStartsWith()</primary></indexterm>
          <entry><literal>assertStringStartsWith($prefixe, $chaine, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertTag()</primary></indexterm>
          <entry><literal>assertTag($matcher, $constate, $message = '', $estHtml = TRUE)</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertThat()</primary></indexterm>
          <entry><literal>assertThat($valeur, PHPUnit_Framework_Constraint $contrainte, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertTrue()</primary></indexterm>
          <entry><literal>assertTrue($condition, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlFileEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlFileEqualsXmlFile($fichierAttendu, $fichierConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlFileNotEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlFileNotEqualsXmlFile($fichierAttendu, $fichierConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlStringEqualsXmlFile($fichierAttendu, $xmlConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringEqualsXmlString()</primary></indexterm>
          <entry><literal>assertXmlStringEqualsXmlString($xmlAttendu, $xmlConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringNotEqualsXmlFile()</primary></indexterm>
          <entry><literal>assertXmlStringNotEqualsXmlFile($fichierAttendu, $xmlConstate, $message = '')</literal></entry>
        </row>
        <row>
          <indexterm><primary>assertXmlStringNotEqualsXmlString()</primary></indexterm>
          <entry><literal>assertXmlStringNotEqualsXmlString($xmlAttendu, $xmlConstate, $message = '')</literal></entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</appendix>
